++++++网站全页变灰css代码++++++++++
html{   
    filter: grayscale(100%);    
    -webkit-filter: grayscale(100%);    
    -moz-filter: grayscale(100%);   
    -ms-filter: grayscale(100%);    
    -o-filter: grayscale(100%); 
    filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale");  
    filter:progid:DXImageTransform.Microsoft.BasicImage(grayscale=1);   -webkit-filter: grayscale(1);
}
将上述代码放入head中的style即可。


这篇日志主要是写  javascript、DOM 的一些 属性 和 方法 。
DOM
document.createElement(li);   创建一个元素
document.createTextNode();    创建一个文本
.appendChild();   在父DOM里面插入一个子节点
.insertBefore(子节点，在谁之前)
removeChild()    删除子元素
cloneNode      复制节点
replaceChild    替换节点
hasChildNodes   判断给定元素节点是否有子元素
parentNode     上级元素节点
childNodes     子节点集合
nodeName   属性含有某个节点的名称。
nodeType    3 文本节点  1 元素节点
children     取元素
offsetParent    此元素的上级定位元素    
firstChild     第一个子节点    FF 下面 是  firstElementChild
lastChild     最后一个子节点   FF  下面是    lastElementChild
nextSibling    下面的兄弟元素  FF下面是   nextElementSibling
previousSibling   上面的兄弟元素   FF下面是     previousElementSibling
a.value ==  a['value']
nodeValue     元素内容
setAttribute(名称，值)    设置元素属性
getAttribute(名称)    获取元素属性
removeAttribute(名称)    删除元素属性
.style.proprtype   设置元素的css
className    改变元素的class 

js闭包：
子函数可以使用父函数的局部变量。
json 没有长度概念，如果想要输出它们，就要用for in 循环输出。

js获取一个页面中的所有a元素和title元素，然后创造新的P元素，并把a的title和内容附加到p元素中。
<script type="text/javascript">  
window.onload = function(){  
 var mya = document.getElementsByTagName('a');  
 var tmp = Array();  
 for(var i = 0; i<mya.length; i++){  
    var mytit = mya[i].getAttribute('title');  
tmp[mytit] = mya[i].lastChild.nodeValue;  
 }  
 var myBody = document.getElementsByTagName('body')[0];  
 for (key in tmp){  
     var myP = document.createElement('p');  
myP.title = key;  
var myTxt = document.createTextNode(tmp[key]);  
myP.appendChild(myTxt);  
myBody.appendChild(myP);  
 }  
}  
</script>  

++++++++jquery中attr()使用++++++++
<script>                                  //用attr设置属性值
$("ul li:eq(1)").attr("title","不吃橘子");
alert($("ul li:eq(1)").attr("title"));
</script>
                                          //用attr删除属性值
<script>
$("ul li:eq(1)").removeAttr ("title");
</script>

++++需要掌握的前端,HTML,JS知识点++++++++
css盒模型。
javascript中的prototype。
javascript中this对象的作用域。
IE和firefox事件冒泡的不同。
什么是怪异模式,标准模式，近标准模式。
DTD的定义
IE/firefox常用hack.
firefox,IE下的前端js/css调试工具。

+++++手机触摸屏的JS事件++++++++
作者 管理员  发布时间 2013-06-13 17:38  文章分类 JavaScript  文章评论 1条评论  阅读次数 
处理Touch事件能让你跟踪用户的每一根手指的位置。你可以绑定以下四种Touch事件：
一、
touchstart:// 手指放到屏幕上的时候触发
touchmove:// 手指在屏幕上移动的时候触发
touchend:// 手指从屏幕上拿起的时候触发
touchcancel:// 系统取消touch事件的时候触发。至于系统什么时候会取消，不详
二、
client / clientY：// 触摸点相对于浏览器窗口viewport的位置
pageX / pageY：// 触摸点相对于页面的位置
screenX /screenY：// 触摸点相对于屏幕的位置
identifier：>// touch对象的unique ID


++++++js判断浏览器版本+++++
var Sys = {};
var ua = navigator.userAgent.toLowerCase();
if (window.ActiveXObject)
Sys.ie = ua.match(/msie ([\d.]+)/)[1]
else if (document.getBoxObjectFor)
Sys.firefox = ua.match(/firefox\/([\d.]+)/)[1]
else if (window.MessageEvent && !document.getBoxObjectFor)
Sys.chrome = ua.match(/chrome\/([\d.]+)/)[1]
else if (window.opera)
Sys.opera = ua.match(/opera.([\d.]+)/)[1]
else if (window.openDatabase)
Sys.safari = ua.match(/version\/([\d.]+)/)[1];
//以下进行测试
if(Sys.ie) document.write('IE: '+Sys.ie);
if(Sys.firefox) document.write('Firefox: '+Sys.firefox);
if(Sys.chrome) document.write('Chrome: '+Sys.chrome);
if(Sys.opera) document.write('Opera: '+Sys.opera);
if(Sys.safari) document.write('Safari: '+Sys.safari);
还可以写成下面这种：
var Sys = {};
var ua = navigator.userAgent.toLowerCase();
window.ActiveXObject ? Sys.ie = ua.match(/msie ([\d.]+)/)[1] :
document.getBoxObjectFor ? Sys.firefox = ua.match(/firefox\/([\d.]+)/)[1] :
window.MessageEvent && !document.getBoxObjectFor ? Sys.chrome = ua.match(/chrome\/([\d.]+)/)[1] :
window.opera ? Sys.opera = ua.match(/opera.([\d.]+)/)[1] :
window.openDatabase ? Sys.safari = ua.match(/version\/([\d.]+)/)[1] : 0;
//以下进行测试
if(Sys.ie) document.write('IE: '+Sys.ie);
if(Sys.firefox) document.write('Firefox: '+Sys.firefox);
if(Sys.chrome) document.write('Chrome: '+Sys.chrome);
if(Sys.opera) document.write('Opera: '+Sys.opera);
if(Sys.safari) document.write('Safari: '+Sys.safari);

JS各种弹窗效果：
http://www.web92.net/dom/2012-06-04-XY_Tips/

++++++对于input输入框+++++
readonly说明此域的值不可修改，只可与 type="text" 配合使用，可复制，
可选择,可接收焦点，后台会接收到传值。
<input type="text" name="www.xxx" readonly="readonly" />
disabled表示禁用input元素，不可编辑，不可复制，不可选择，
不能接收焦点,后台也不会接收到传值
<input type="text" name="www.xxx.com" disabled="disabled" />
最后介绍一个标签，浏览器通常会记录input输入框的记录，所以你在输入的时候，经常会下拉很多内容，
如果你想去掉的话，最好加上autocomplete="off"，使用方法如下：autocomplete="off"
<input type="text" autocomplete="off" id="number"/>



++++js在手机上的表现+++++
一、手机上的触摸事件
基本事件：
touchstart   //手指刚接触屏幕时触发
touchmove    //手指在屏幕上移动时触发
touchend     //手指从屏幕上移开时触发
下面这个比较少用：
touchcancel  //触摸过程被系统取消时触发
每个事件都有以下列表，比如touchend的targetTouches当然是 0 咯：
touches         //位于屏幕上的所有手指的列表
targetTouches   //位于该元素上的所有手指的列表
changedTouches  //涉及当前事件的所有手指的列表
每个事件有列表，每个列表还有以下属性：
复制代码
其中坐标常用pageX,pageY：
pageX    //相对于页面的 X 坐标
pageY    //相对于页面的 Y 坐标
clientX  //相对于视区的 X 坐标
clientY  //相对于视区的 Y 坐标
screenX  //相对于屏幕的 X 坐标
screenY  //相对于屏幕的 Y 坐标
identifier // 当前触摸点的惟一编号
target   //手指所触摸的 DOM 元素
复制代码
其他相关事件：
event.preventDefault（）   //阻止触摸时浏览器的缩放、滚动条滚动
var supportTouch = "createTouch" in document  //判断是否支持触摸事件
二、示例
以下是获取不同类型滑动的代码具体做法，结合前人的思想，封装好了，可以借鉴学习：
复制代码
var touchFunc = function(obj,type,func) {
    //滑动范围在5x5内则做点击处理，s是开始，e是结束
    var init = {x:5,y:5,sx:0,sy:0,ex:0,ey:0};
    var sTime = 0, eTime = 0;
    type = type.toLowerCase();
 
    obj.addEventListener("touchstart",function(){
        sTime = new Date().getTime();
        init.sx = event.targetTouches[0].pageX;
        init.sy = event.targetTouches[0].pageY;
        init.ex = init.sx;
        init.ey = init.sy;
        if(type.indexOf("start") != -1) func();
    }, false);
 
    obj.addEventListener("touchmove",function() {
        event.preventDefault();//阻止触摸时浏览器的缩放、滚动条滚动
        init.ex = event.targetTouches[0].pageX;
        init.ey = event.targetTouches[0].pageY;
        if(type.indexOf("move")!=-1) func();
    }, false);
 
    obj.addEventListener("touchend",function() {
        var changeX = init.sx - init.ex;
        var changeY = init.sy - init.ey;
        if(Math.abs(changeX)>Math.abs(changeY)&&Math.abs(changeY)>init.y) {
            //左右事件
            if(changeX > 0) {
                if(type.indexOf("left")!=-1) func();
            }else{
                if(type.indexOf("right")!=-1) func();
            }
        }
        else if(Math.abs(changeY)>Math.abs(changeX)&&Math.abs(changeX)>init.x){
            //上下事件
            if(changeY > 0) {
                if(type.indexOf("top")!=-1) func();
            }else{
                if(type.indexOf("down")!=-1) func();
            }
        }
        else if(Math.abs(changeX)<init.x && Math.abs(changeY)<init.y){
            eTime = new Date().getTime();
            //点击事件，此处根据时间差细分下
            if((eTime - sTime) > 300) {
                if(type.indexOf("long")!=-1) func(); //长按
            }
            else {
                if(type.indexOf("click")!=-1) func(); //当点击处理
            }
        }
        if(type.indexOf("end")!=-1) func();
    }, false);
};


++++++手机触摸屏的JS事件 +++++++
处理Touch事件能让你跟踪用户的每一根手指的位置。你可以绑定以下四种Touch事件：
    1.touchstart:  // 手指放到屏幕上的时候触发 
    2.touchmove:  // 手指在屏幕上移动的时候触发 
    3.touchend:  // 手指从屏幕上拿起的时候触发 
    4touchcancel:  // 系统取消touch事件的时候触发。至于系统什么时候会取消，不详
属性
    1.client / clientY：// 触摸点相对于浏览器窗口viewport的位置 
    2.pageX / pageY：// 触摸点相对于页面的位置 
    3.screenX /screenY：// 触摸点相对于屏幕的位置 
    4.identifier： // touch对象的unique ID 
//touchstart事件  
function touchSatrtFunc(e) {  
    //evt.preventDefault(); //阻止触摸时浏览器的缩放、滚动条滚动等  
    var touch = e.touches[0]; //获取第一个触点  
    var x = Number(touch.pageX); //页面触点X坐标  
    var y = Number(touch.pageY); //页面触点Y坐标  
    //记录触点初始位置  
    startX = x;  
    startY = y;  
}  
//touchmove事件 
function touchMoveFunc(e) {  
    //evt.preventDefault(); //阻止触摸时浏览器的缩放、滚动条滚动等  
    var touch = evt.touches[0]; //获取第一个触点  
    var x = Number(touch.pageX); //页面触点X坐标  
    var y = Number(touch.pageY); //页面触点Y坐标  
    var text = 'TouchMove事件触发：（' + x + ', ' + y + '）';  
    //判断滑动方向  
    if (x - startX != 0) {  
        //左右滑动  
    }  
    if (y - startY != 0) {  
        //上下滑动  
    }  
}  

++++++++Mobile Web前端开发系列:事件处理（二）++++++++  
上篇文章我们讲了html的基本事件，这篇文章我们着重讲解下触摸事件，触摸事件触发的条件是手指接触屏幕、手指在屏幕上移动或者从屏幕上离开。 事件是触摸的集合，它起始于手指初次放置在屏幕上，终止于最后一个手指离开屏幕。事件从开始到结束过程中的所有触摸操作都存储在相同事件的记录中。
touch事件
touch事件可以分为单点触摸和多点触摸两种，单点触摸高端机一般都支持，Safari2.0、Android3.0以上的版本支持多点触摸，支持最多5个手指同时触摸屏幕，ipad最多支持11个手指同时触摸屏幕， 我们可以采用以下的事件模型捕获这些事件，
ontouchstart ontouchmove ontouchend ontouchcancel
当用户按下手指在屏幕上，ontouchstart会被触发，当用户移动一个或多个手指的时候，ontouchmove会被触发，当用户移走手指， ontouchend被触发。那什么时候触发ontouchcancel呢？当一些更高级别的事件发生的时候，例如，alert，有电话打来或者有 推送的消息提示的时候会取消当前的touch操作，即触发ontouchcancel。当你在开发一个web game的时候，ontouchcancel 对你很重要，你可以在ontouchcancel触发的时候暂停游戏或者保存游戏。
gesture事件
gesture事件的运行原理与touch事件相同，只是gesture事件仅当屏幕上存在至少两个手指时触发，所以Safari2.0、Android3.0以上版本支持， 手势具备诸多优势，可以帮助我们测量两指放缩和旋转操作，事件模型如下，
ongesturestart ongesturechange ongestureend
事件属性
无论使用触摸还是手势事件，你都需要将这些事件转换为单独的触摸来使用它们。为此，你需要访问事件对象的一系列的属性。
targetTouches 目标元素的所有当前触摸 changedTouches 页面上最新更改的所有触摸 touches 页面上的所有触摸
changedTouches、targetTouches和touches分别包含稍微不同的触摸列表。targetTouches和touches分别包含当前位于 屏幕上的手指列表，但changedTouches仅列出最后发生的触摸。如果你在使用touchend或者gestureend事件，那么这个属性 非常重要。在这两种情况下，屏幕上都不会再出现手指，因此targetTouches和touches应该为空，但你仍然可以通过查看 changedTouches数组来了解最后发生的事情。
由于触摸属性都会生成数组，因此你可以使用JavaScript数组函数来访问它们。这意味着，event.touches[0]将返回第一次 触摸，并且可以使用event.touches.length来计算当前存储的触摸数量。
查看单独触摸时，通过使用event.targetTouches[0],你也可以访问其它触摸，每个触摸会包含一些具体信息，
clientX、clientY 相对于当前屏幕的X或Y位置 pageX、pageY 相对于整体页面的X或Y位置 screenX、screenY 相对于用户计算机屏幕的X或Y位置 identifier 事件的唯一标识符 target 生成触摸的目标对象
手势事件的事件对象会比普通触摸事件多两个属性，
rotation 手指的旋转角度 scale 放缩的值

underfined、null、0、false、NaN、空字符串的逻辑结果均为false。

从数组中随机获取成员
var items = [12, 548 , 'a' , 2 , 5478 , 'foo' , 8852, , 'Doe' , 2145 , 119];
var  randomItem = items[Math.floor(Math.random() * items.length)];

获取指定范围内的随机数
var x = Math.floor(Math.random() * (max - min + 1)) + min;

生成从0到指定值的数字数组
var numbersArray = [] , max = 100;
for( var i=1; numbersArray.push(i++) < max;);  // numbers = [1,2,3 ... 100]

生成随机的字母数字字符串
function generateRandomAlphaNum(len) {
    var rdmString = "";
    for( ; rdmString.length < len; rdmString  += Math.random().toString(36).substr(2));
    return  rdmString.substr(0, len);
}

打乱数字数组的顺序
var numbers = [5, 458 , 120 , -215 , 228 , 400 , 122205, -85411];
numbers = numbers.sort(function(){ return Math.random() - 0.5});
/* numbers 数组将类似于 [120, 5, 228, -215, 400, 458, -85411, 122205]  */


字符串去空格
Java、C#和PHP等语言都实现了专门的字符串去空格函数，但JavaScript中是没有的，
可以通过下面的代码来为String对象函数一个trim函数：
String.prototype.trim = function(){return this.replace(/^\s+|\s+$/g, "");};
新的JavaScript引擎已经有了trim()的原生实现。

数组之间追加
var array1 = [12 , "foo" , {name "Joe"} , -2458];
var array2 = ["Doe" , 555 , 100];
Array.prototype.push.apply(array1, array2);
/* array1 值为  [12 , "foo" , {name "Joe"} , -2458 , "Doe" , 555 , 100] */

对象转换为数组
var argArray = Array.prototype.slice.call(arguments);

验证是否是数组
function isArray(obj){
    return Object.prototype.toString.call(obj) === '[object Array]' ;
}
但如果toString()方法被重写过得话，就行不通了。也可以使用下面的方法：
Array.isArray(obj); // its a new Array method

获取数组中的最大值和最小值
var  numbers = [5, 458 , 120 , -215 , 228 , 400 , 122205, -85411]; 
var maxInNumbers = Math.max.apply(Math, numbers); 
var minInNumbers = Math.min.apply(Math, numbers);


清空数组
var myArray = [12 , 222 , 1000 ];  
myArray.length = 0; // myArray will be equal to [].

使用length属性截断数组
var myArray = [12 , 222 , 1000 , 124 , 98 , 10 ];  
myArray.length = 4; // myArray will be equal to [12 , 222 , 1000 , 124].
与此同时，如果把length属性变大，数组的长度值变会增加，会使用undefined来作为新的元素填充。length是一个可写的属性。
myArray.length = 10; // the new array length is 10 
myArray[myArray.length - 1] ; // undefined

使得map()函数方法对数据循环
var squares = [1,2,3,4].map(function (val) {  
    return val * val;  
}); 
// squares will be equal to [1, 4, 9, 16]

保留指定小数位数
var num =2.443242342;
num = num.toFixed(4);  // num will be equal to 2.4432
注意，toFixec()返回的是字符串，不是数字。

浮点计算的问题
0.1 + 0.2 === 0.3 // is false 
9007199254740992 + 1 // is equal to 9007199254740992
9007199254740992 + 2 // is equal to 9007199254740994
为什么呢？因为0.1+0.2等于0.30000000000000004。JavaScript的数字都遵循IEEE 754标准构建，
在内部都是64位浮点小数表示.
可以通过使用toFixed()和toPrecision()来解决这个问题。


通过for-in循环检查对象的属性
for (var name in object) {  
    if (object.hasOwnProperty(name)) { 
        // do something with name
    }  
}

逗号操作符
var a = 0; 
var b = ( a++, 99 ); 
console.log(a);  // a will be equal to 1 
console.log(b);  // b is equal to 99

提前检查传入isFinite()的参数
isFinite(0/0) ; // false
isFinite("foo"); // false
isFinite("10"); // true
isFinite(10);   // true
isFinite(undefined);  // false
isFinite();   // false
isFinite(null);  // true，这点当特别注意

用JSON来序列化与反序列化
var person = {name :'Saad', age : 26, department : {ID : 15, name : "R&D"} };
var stringFromPerson = JSON.stringify(person);
/* stringFromPerson 结果为 "{"name":"Saad","age":26,"department":{"ID":15,"name":"R&D"}}"   */
var personFromString = JSON.parse(stringFromPerson);
/* personFromString 的值与 person 对象相同  */

不要使用eval()或者函数构造器
eval()和函数构造器（Function consturctor）的开销较大，每次调用，JavaScript引擎都要将源代码转换为可执行的代码。
var func1 = new Function(functionCode);
var func2 = eval(functionCode);

不要对数组使用for-in
避免：
var sum = 0;  
for (var i in arrayNumbers) {  
    sum += arrayNumbers[i];  
}
而是：
var sum = 0;  
for (var i = 0, len = arrayNumbers.length; i < len; i++) {  
    sum += arrayNumbers[i];  
}


使用XMLHttpRequests时注意设置超时
XMLHttpRequests在执行时，当长时间没有响应（如出现网络问题等）时，应该中止掉连接，可以通过setTimeout()来完成这个工作：
var xhr = new XMLHttpRequest (); 
xhr.onreadystatechange = function () {  
    if (this.readyState == 4) {  
        clearTimeout(timeout);  
        // do something with response data 
    }  
}  
var timeout = setTimeout( function () {  
    xhr.abort(); // call error callback  
}, 60*1000 /* timeout after a minute */ ); 
xhr.open('GET', url, true);  
xhr.send();
同时需要注意的是，不要同时发起多个XMLHttpRequests请求。


++++++++javascript获取css样式++++++++
1.获取行间样式就不说了，基本就是obj.style.fontSize obj.style.left   obj.style.mozUserSelect等等
2、JavaScript获取行外部<style></style>里的样式
（1）firefox中用getComputedStyle()方法
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">  
<html xmlns="http://www.w3.org/1999/xhtml">  
<head>  
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />  
<title>JS获取行外部样式</title>  
<style type="text/css">  
    #body_div{  
        font-size:14px;  
        width:400px;  
        height:500px;  
    }  
</style>  
<script type="text/javascript">  
    function getStyle()  
    {  
        var div = document.getElementById("body_div");  
        var whole = document.defaultView.getComputedStyle(div,null);  
        alert(whole.fontSize);  
        alert(whole.width);  
        alert(whole.height);  
    }  
</script>  
</head>  
  
<body onload="getStyle();">  
   <div id="body_div" style="font-weight:bolder;">JS获取行外部样式</div>  
</body>  
</html>  
（2）IE浏览器用obj.currentStyle方法


列出display的值。
display:block;
display:compact;
display:inherit;
display:inline;
display:inline-block;
display:inline-table;
display:list-item;
display:marker;
display:none;
display:run-in;
display:table;
display:table-caption;
display:table-cell;
display:table-column;
display:table-column-group;
display:table-footer-group;
display:table-header-group;
display:table-row;
display:table-row-group;
display:!important;


+++++JavaScript字符串数值比较问题++++++
字符串比较是根据ASCII码，由于8的ASCII码比2的ASCII码大，导致出现了8.4大于21.3的情况。
解决办法
将字符串转换成数值
function compareData()  
    {  
        var data1 = document.getElementById("inval").value;  
        var data2 = document.getElementById("typev").value;  
        if(Number(data1) > Number(data2))  
        {  
            alert(data1+"大于"+data2);      
        }  
        else  
        {  
            alert(data1+"小于或等于"+data2);  
        }  
    }  


+++++++JavaScript替换字符串中最后一个字符+++++++
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">  
<html xmlns="http://www.w3.org/1999/xhtml">  
<head>  
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />  
<title>JavaScript替换字符串中最后一个字符</title>  
<script type="text/javascript">  
    function replaceStr()  
    {  
        var e = event || window.event || arguments.callee.caller.arguments[0];  
        var input_str = document.getElementById("input_str").value;  
        var newStr = input_str.substring(0,11);  
        if(e && e.keyCode>=48 && e.keyCode <= 57)  
        {   
            newStr += (e.keyCode-48);     
        }  
        document.getElementById("input_str").value = newStr;  
    }  
</script>  
</head>  
  
<body>  
    <input type="text" id="input_str" maxlength="12" onkeyup="replaceStr();"/>  
</body>  
</html>  



+++++++JS显示标准时间格式+++++++
利用常规方法，直接拼接日期时间：
var dayTime = $("#endTime").val();  
        var dtime = new Date(dayTime);  
        dtime.setTime(dtime.getTime()+365*100);  
        var date = new Date(dtime.getTime());  
        var year = date.getFullYear();  
        var month = date.getMonth()+1;  
        var day = date.getDate();  
        var hour = date.getHours();  
        var minute = date.getMinutes();  
        var second = date.getSeconds();  
        var date1 = year+"-"+(month<10?"0"+month:month)+"-"+(day<10?"0"+day:day)+" "+(hour<10?"0"+hour:hour)+":"+(minute<10?"0"+minute:minute)+":"+(second<10?"0"+second:second);  
        $("#endDate").val(date1);  


++++++JavaScript常用对象有哪些++++++
1、String
2、Date
3、Math
4、Array
5、Number
6、Boolean

++++++form表单中的input有哪些类型++++++
1、button
    <input type="button"/>
2、checkbox
     <input type="checkbox"/>
3、file
     <input type="file"/>
4、hidden
    <input type="hidden"/>
5、image
    <input type="image"/>
6、password
    <input type="password"/>
7、radio
    <input type="radio"/>
8、reset
    <input type="reset"/>
9、submit
     <input type="submit"/>
10、text
      <input type="text"/>

++++++JavaScript禁止浏览器默认行为++++++
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">  
<html xmlns="http://www.w3.org/1999/xhtml">  
<head>  
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />  
<title>JavaScript禁止浏览器默认行为</title>  
<script type="text/javascript">  
     function linkClick()  
     {  
         var divTag = document.getElementById("atag");  
         divTag.onclick = function(e){  
             if(e.preventDefault)  
             {  
                 e.preventDefault();  
             }  
             else  
             {  
                 window.event.returnValue == false;   //（IE浏览器）
             }  
         }  
     }  
</script>  
  
</head>  
  
<body>  
   <div id="div_atag">  
       <a href="http://www.baidu.com" id="atag">百度</a>  
   </div>  
</body>  
</html>  


+++++如何利用JavaScript遍历JSON数组+++++
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">  
<html xmlns="http://www.w3.org/1999/xhtml">  
<head>  
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />  
<title>利用JavaScript遍历JSON数组</title>  
<script type="text/javascript">  
     function traJsonArray()  
     {  
         var jsonArray = [{"id":"100","name":"zhangsan","age":"23","sex":"man"},{"id":"101","name":"lisi","age":"21","sex":"woman"},{"id":"102","name":"wangwu","age":"22","sex":"man"}];  
         var inputText = "";  
         for(var json in jsonArray)  
         {  
             for(var key in jsonArray[json])  
             {  
                inputText += jsonArray[json][key]+",";   
             }  
         }  
           
         document.getElementById("areaText").innerText = inputText;  
     }  
</script>  
</head>  
  
<body>  
   <div>  
      <input type="button" id="btn" onclick="traJsonArray()" value="利用JavaScript遍历JSON数组"/>  
      <textarea id="areaText" cols="80" rows="30"></textarea>  
   </div>  
</body>  
</html>  


++++++JavaScript控制输入框中只能输入中文、数字和英文++++++
  function  checkUsername()
  {
        //正则表达式
        var reg = new RegExp("^[a-zA-Z\d\u4E00-\u9FA5]+$");
        //获取输入框中的值
        var username = document.getElementById("username").value.trim();
        //判断输入框中有内容
       if(username.length >0)
       {
              alert("请输入中文、数字和英文！");
              //输入非法字符，清空输入框
              $("#username").val("");
       }
  }

++++JavaScript向select下拉框中添加和删除元素++++++
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">  
<html xmlns="http://www.w3.org/1999/xhtml">  
<head>  
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />  
<title>JavaScript向select下拉框中添加和删除元素</title>  
<script type="text/javascript" src="jquery-1.11.1.js"></script>  
<script type="text/javascript">  
      /**  
       * 向select下拉框中添加子元素  
       */  
     function addElement()  
     {      
         //保证不重复添加  
         $("#select_div").empty();  
         //添加子元素  
         $("#select_div").append("<option value='0'>---请选择---</option><option value='1'>男</option><option value='2'>女</option>");  
     }  
       
     /**  
      * 删除下拉框中最后一个元素  
      */  
     function removeLast()  
     {  
         //删除最后一个子元素  
         $("#select_div option:last").remove();  
     }  
</script>  
</head>  
  
<body>  
</body>  
    <div id="select_span">  
         <select id="select_div" style="width:145px;">  
               
         </select>  
    </div>  
    <input type="button" value="添加元素" onclick="addElement()"/>  
    <input type="button" value="删除元素" onclick="removeLast()"/>  
</html> 


++++++++JavaScript获取某年某月的最后一天++++++++
<!DOCTYPE html>  
<!--  
To change this license header, choose License Headers in Project Properties.  
To change this template file, choose Tools | Templates  
and open the template in the editor.  
-->  
<html>  
    <head>  
        <title>JavaScript获取某年某月的最后一天</title>  
        <meta charset="UTF-8">  
        <meta name="viewport" content="width=device-width">  
        <script type="text/javascript">  
              /**  
               * 获取某年某月的最后一天  
               */  
              function getLastDayOfMonth(year,month)  
              {  
                  //获取本年本月的第一天日期  
                  var date = new Date(year,month-1,'01');  
                  //设置日期  
                  date.setDate(1);  
                  //设置月份  
                  date.setMonth(date.getMonth() + 1);  
                  //获取本月的最后一天  
                  cdate = new Date(date.getTime() - 1000*60*60*24);  
                  //打印某年某月的最后一天  
                  alert(cdate.getFullYear()+"年"+(Number(cdate.getMonth())+1)+"月最后一天的日期:"+cdate.getDate()+"日");   
                  //返回结果  
                  return cdate.getDate();  
              }  
        </script>  
    </head>  
    <body>  
        <input type="button" value="获取某年某月的最后一天" onclick="getLastDayOfMonth(2014,6)"/>  
    </body>  
</html>  


+++++JavaScript获取地址栏中的参数+++++
function getAddressURLParam(paramName)  
{  
     //构造一个含有目标参数的正则表达式的对象  
     var reg = new RegExp("(^|&)" + paramName + "=([^&]*)(&|$)");  
     //匹配目标参数  
     var url = window.location.search.substr(1).match(reg);  
    //返回参数值  
    if(url != null)  
     return unescape(url[2]);  
    return null;  
}  
获取type参数值：
var typeParem = getAddressURLParam(type);


++++JavaScript获取路径+++++
<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>  
  
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">  
<html>  
  <head>  
      
    <title>JavaScript获取路径</title>  
      
    <meta http-equiv="pragma" content="no-cache">  
    <meta http-equiv="cache-control" content="no-cache">  
    <meta http-equiv="expires" content="0">      
    <meta http-equiv="keywords" content="keyword1,keyword2,keyword3">  
    <meta http-equiv="description" content="This is my page">  
    <script type="text/javascript">  
         function findPath()  
         {  
              //获取当前网址  
              var curNetAddr = window.document.location.href;  
              alert("获取当前网址:" + curNetAddr);  
                
              //获取主机地址之后的目录  
              var hostPath = window.document.location.pathname;  
              alert("获取主机地址之后的目录：" + hostPath);  
                
              //返回某个指定的字符串值在字符串中首次出现的位置  
              var count = curNetAddr.indexOf(hostPath);  
              alert("返回某个指定的字符串值在字符串中首次出现的位置：" + count);  
                
              //获取主机地址  
              var hostAddr = curNetAddr.substring(0,count);  
              alert("获取主机地址：" + hostAddr);  
                
              //获取带“/”的项目名  
              var projectName = hostPath.substring(0,hostPath.substr(1).indexOf('/')+1);  
              alert("获取带“/”的项目名：" + projectName);  
                
              //获取项目路径  
              var path = hostAddr + projectName;  
              alert("获取项目路径：" + path);  
         }  
    </script>  
  
  </head>  
    
  <body>  
     <div id="body_div">  
         <input type="button" id="btn" value="获取路径" onclick="findPath()"/>  
     </div>  
  </body>  
</html>  


+++++JavaScript获取当前日期++++++++
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">  
<html xmlns="http://www.w3.org/1999/xhtml">  
<head>  
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />  
<title>JavaScript获取当前日期</title>  
<script type="text/javascript">  
    /**  
      *获取日期  
      *  
     **/  
    function findDate()  
    {  
        //实例化一个对象date  
        var date = new Date();  
        //获取年份  
        var year = date.getFullYear();  
        //获取月份  
        var month = date.getMonth() + 1;  
        //获取日子  
        var day = date.getDate();  
        //拼接日期  
        var thisDate = year + "-" + (month<10 ? "0" + month : month) + "-" + (day<10 ? "0" + day : day);  
        //打印日期  
        alert("当前日期：" + thisDate);    
    }  
</script>  
</head>  
  
<body>  
   <input type="button" value="获取日期" onclick="findDate()"/>  
</body>  
</html>  


+++++JavaScript获取屏幕和页面的宽度和高度+++++
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">  
<html xmlns="http://www.w3.org/1999/xhtml">  
<head>  
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />  
<title>宽度和高度</title>  
<script type="text/javascript">  
    function widthAndHeight()  
    {  
        //网页可见区域宽  
        var clientWidth = document.body.clientWidth;  
        //网页可见区域高  
        var clientHeight = document.body.clientHeight;  
        //网页正文全文宽  
        var scrollWidth = document.body.scrollWidth;  
        //网页正文全文高  
        var scrollHeight = document.body.scrollHeight;  
        //网页可见区域宽(包括边线的宽)  
        var offWidth = document.body.offsetWidth;  
        //网页可见区域高(包括边线的宽)  
        var offHeight = document.body.offsetHeight;  
        //屏幕分辨率的宽  
        var screenWidth = window.screen.width;  
        //屏幕分辨率的高  
        var screenHeight = window.screen.height;  
        //屏幕可用工作区宽度  
        var avaWidth = window.screen.availWidth;  
        //屏幕可用工作区高度  
        var avaHeight = window.screen.availHeight;            
        document.writeln("网页可见区域宽：" + clientWidth + "<br>");  
        document.writeln("网页可见区域高：" + clientHeight + "<br>");  
        document.writeln("网页正文全文宽：" + scrollWidth + "<br>");  
        document.writeln("网页正文全文高：" + scrollHeight + "<br>");  
        document.writeln("网页可见区域宽(包括边线的宽)：" + offWidth + "<br>");  
        document.writeln("网页可见区域高(包括边线的宽)：" + offHeight + "<br>");  
        document.writeln("屏幕分辨率的宽：" + screenWidth + "<br>");  
        document.writeln("屏幕分辨率的高：" + screenHeight + "<br>");  
        document.writeln("屏幕可用工作区宽度：" + avaWidth + "<br>");  
        document.writeln("屏幕可用工作区高度：" + avaHeight + "<br>");            
    }  
</script>  
</head>  
  
<body>  
   <input type="button" id="btn" value="宽度和高度" onclick="widthAndHeight()"/>  
</body>  
</html> 


+++++JavaScript过滤特殊字符+++++++
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">  
<html xmlns="http://www.w3.org/1999/xhtml">  
<head>  
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />  
<title>JavaScript过滤特殊字符</title>  
<style type="text/css">  
    body{  
        width:80%;  
        background-color:#FFC;  
        height:100px;  
        font-size:14px;  
        font-family:"Times New Roman", Times, serif;  
        font-stretch:expanded;  
        font-style:inherit;  
        font-variant:inherit;  
        font-weight:bold;  
    }  
    #div1{  
        text-align:center;  
        width:100%;  
        height:100%;  
        line-height:inherit;  
    }  
    #btn{  
        font:Georgia, "Times New Roman", Times, serif;  
        font-size-adjust:inherit;  
        font-weight:bold;  
        background-color:#C96;  
        alignment-adjust:after-edge;  
        alignment-baseline:baseline;  
        word-break:break-all;  
        width:120px;  
        height:30px;  
        font-size:16px;  
        animation:ease;  
    }  
</style>  
<script type="text/javascript">  
    /**  
      * 过滤字符串函数  
      **/  
    function filterStr(str)  
    {  
        var pattern = new RegExp("[`~!@#$^&*()=|{}':;',\\[\\].<>/?~！@#￥……&*（）——|{}【】‘；：”“'。，、？%+_]");  
        var specialStr = "";  
        for(var i=0;i<str.length;i++)  
        {  
             specialStr += str.substr(i, 1).replace(pattern, '');   
        }  
        return specialStr;  
    }  
      
    /**  
      * 检测过滤字符串函数  
      **/  
    function checkStr()  
    {  
        var str = document.getElementById("pContent").innerHTML;  
        alert("过滤之前的字符串：" + str);  
        str = filterStr(str);  
        alert("过滤之后的字符串：" + str);  
    }  
</script>  
</head>  
  
<body>  
   <div id="div1">  
      <p id="pContent">张三huhnjhj$%$^%^%&^*&<>?{}{{[]()_+|@~`$378748hyfgtyt35451fdhjdsh&%^^&$#%%&^^*&(*%$%$f4857485</p>  
      <input type="button" id="btn" name="btn" value="过滤" onclick="checkStr()"/>  
   </div>  
</body>  
</html>  



+++++ JavaScript实现页面跳转++++++
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">  
<html>  
<head>  
<meta http-equiv="Content-Type" content="text/html; charset=GBK">  
<title>404 Not Found</title>  
</head>  
<body>  
 <h1>找不到指定的页面</h1>  
 <span id="totalSecond">3</span>秒后自动返回  
</body>  
<script language="javascript" type="text/javascript">  
<!--  
    var second = document.getElementById('totalSecond').textContent;  
    if (navigator.appName.indexOf("Explorer") > -1)  //判断是IE浏览器还是Firefox浏览器，采用相应措施取得秒数  
    {  
        second = document.getElementById('totalSecond').innerText;  
    } else  
    {  
        second = document.getElementById('totalSecond').textContent;  
    }  
    setInterval("redirect()", 1000);  //每1秒钟调用redirect()方法一次  
    function redirect()  
    {  
        if (second < 0)  
        {  
            location.href = 'http://www.baidu.com';  
        } else  
        {  
            if (navigator.appName.indexOf("Explorer") > -1)  
            {  
                document.getElementById('totalSecond').innerText = second--;  
            } else  
            {  
                document.getElementById('totalSecond').textContent = second--;  
            }  
        }  
    }  
-->  
</script>  
</html></td>  
      </tr>  
    </table> 



++++CSS3中-moz、-ms、-webkit和-o+++++++
1、-moz-：代表FireFox浏览器私有属性
2、-ms-：代表IE浏览器私有属性
3、-webkit-：代表safari、chrome浏览器私有属性
4、-o-：代表opera浏览器私有属性


++++++请描述一下 cookies，sessionStorage 和 localStorage 的区别？++++++
sessionStorage 和 localStorage 是HTML5 Web Storage API 提供的，可以方便的在web请求之间保存
数据。有了本地数据，就可以避免数据在浏览器和服务器间不必要地来回传递。
sessionStorage、localStorage、cookie都是在浏览器端存储的数据，其中sessionStorage的概念很特别，
引入了一个“浏览器窗口”的概念。sessionStorage是在同源的同窗口（或tab）中，始终存在的数据。
也就是说只要这个浏览器窗口没有关闭，即使刷新页面或进入同源另一页面，数据仍然存在。
关闭窗口后，sessionStorage即被销毁。同时“独立”打开的不同窗口，
即使是同一页面，sessionStorage对象也是不同的。
共同点：都是保存在浏览器端，且同源的。
区别：
cookie数据始终在同源的http请求中携带（即使不需要），即cookie在浏览器和服务器间来回传递。
而sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存。cookie数据还有路径
（path）的概念，可以限制cookie只属于某个路径下。
存储大小限制也不同，cookie数据不能超过4k，同时因为每次http请求都会携带cookie，所以cookie只
适合保存很小的数据，如会话标识。sessionStorage和localStorage 虽然也有存储大小的限制
，但比cookie大得多，可以达到5M或更大。
数据有效期不同，sessionStorage：仅在当前浏览器窗口关闭前有效，自然也就不可能持久保持；
localStorage：始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；cookie只在设置
的cookie过期时间之前一直有效，即使窗口或浏览器关闭。
作用域不同，sessionStorage不在不同的浏览器窗口中共享，即使是同一个页面；localStorage 在所有同源窗口中都是共享的；cookie也是在所有同源窗口中都是共享的。
Web Storage 支持事件通知机制，可以将数据更新的通知发送给监听者。
Web Storage 的 api 接口使用更方便。



++++++++HTML5和HTML4之间的区别++++++++
1、HTML头部
（1）HTML5：
        <!doctype html>
（2）HTML4：
<!DOCTYPE html PUBLIC “-//W3C//DTD HTML 4.01//EN”
 “http://www.w3.org/TR/html4/strict.dtd”>
2、HTML编码
（1）HTML5：
	<meta charset=“utf-8”>
（2）HTML4：
	<meta http-equiv=”content-type”content=”text/html;charset=UTF-8”>
3、引入CSS样式文件
（1）HTML5：
       <link rel=”stylesheet” href=”demo.css”>
（2）HTML4：
	<link type=”text/css” rel=”stylesheet” href="demo.css”>
4、引入JS文件
（1）HTML5：
	<script src=”demo.js”></script>
（2）HTML4：
	<script type=”text/javascrpt” src="demo.js”></script>


+++++HTML中设置背景图的两种方式+++++
1、background
   background:url(images/search.png) no-repeat top;
2、background-image
   background-image：url(images/search.png)；
   background-repeat:no-repeat;


++++border-style的值及其作用+++++
border-style:dashed; /*虚线*/
border-style:dotted; /*点线*/
border-style:double; /*双线边框*/
border-style:groove; /*根据border-color的值画3D凹槽*/
border-style:hidden; /*隐藏边框*/
border-style:inherit; /*根据border-color的值画菱形边框*/
border-style:inset;  /*根据border-color的值画3D凹边*/
border-style:none;   /*不显示边框*/
border-style:outset;  /*根据border-color的值画3D凸边*/
border-style:ridge;  /*根据border-color的值画菱形边框*/
border-style:solid;  /*实线边框*/
border-style:!important;

+++CSS相关题目++++++
1、设置边框的样式用border-style实现，设置边框的颜色用border-color实现
2、CSS的语法由选择器、属性、值三部分组成
3、设置一个div的最小宽度为50像素，最大高度为100像素，实现这两个设置的方法是min-width:50px、max-height:100px
4、想要设置一个对象外的线条轮廓的样式为虚线边框，用outline-style: dashed实现该功能
5、在css中，如果想要阻止计数器增加的，用counter-increment : none来实现
6、如果想设置表格的行与单元格的边框合并在一起，可以用border-collapse：collapse来实现
7、在css中，如果想要阻止计数器增加的，用counter-increment : none来实现

 地址标签：<address>Wiyt's Email:126@126.com</address>

++++++javascript获取当前时间是一年当中的第几周++++++
  function getWeekOfYear(date){
    var year=date.getFullYear();
    var baseDate=new Date(year,0,1);
    var baseWeekDay=testDate.getDay();
    var dateWeekDay=date.getDay();
    if(baseWeekDay==0) baseWeekDay=7;
    if(dateWeekDay==0) dateWeekDay=7;
    var weekOfYear=Math.round(((date.getTime()-dateWeekDay*3600*24*1000)-(baseDate.getTime()-baseWeekDay*3600*24*1000))/(24*3600*1000)/7);
    return weekOfYear+1;}


+++++js屏蔽ip(地区)访问某个静态或动态页面++++++++
js链接为：<script type=”text/javascript” src=”http://www.tnbrj.com/api/ipapi.php”></script>
下面以屏蔽了北京地区的ip为例：
<?php
header("Content-Type:text/html;charset=utf-8");
  $cip = getenv('REMOTE_ADDR');
  $cip1 = getenv('HTTP_CLIENT_IP');
  $cip2 = getenv('HTTP_X_FORWARDED_FOR');
  $cip1 ? $cip = $cip1 : null;
  $cip2 ? $cip = $cip2 : null;
if(('111.194.227.60'!=$cip)&&('221.122.124.114'!=$cip)){
 $city = file_get_contents('http://www.tnbrj.com/api/ip.php?ip='.$cip.'');
 if(substr_count($city,'北京')){
?>
     var js = document.createElement("body");
  js.innerHTML = "该页不存在,有事请联系:";
  document.getElementsByTagName("html")[0].appendChild(js);
  var js2 = document.createElement("img");
  js2.src = "http://www.tnbrj.com/api/dh.png";
  js.appendChild(js2);
 document.write('<script src="http://www.tnbrj.com/api/stop.js"></script>');
 //window.stop ? window.stop() : document.execCommand("Stop");这个是stop.js下的内容
<?php
 }
}
?>


++++++++php实现的扫雷小游戏++++++++
<?php
error_reporting(E_ALL ^ E_NOTICE);
$init = $_POST["init"];//game restart
$clickvalue = $_POST["clickvalue"];//minesweeping
$checkflag = 0;//Victory or defeat
$click_count = 0;//clicks count
if($init == null && $clickvalue == null){//initialization
    $_POST = array();//set POST with a array
    $_POST["rows"] = 9;//set rows
    $_POST["cols"] = 9;//set cols
    $_POST["num"] = 10;//set num
    $_POST["timeshow"] = "00:00"; //set starttime
    $init = true;//set initialization
}
$rows = $_POST["rows"];//get rows
$cols = $_POST["cols"];//get cols
$num = $_POST["num"];//get num
$starttime = $_POST["starttime"];//get starttime
if($init){// is initialization
    $timeshow = "00:00";//set starttime
    $data = array();//data initialization
    for($i=0;$i<$rows;$i++){//all the rows
        for($j=0;$j<$cols;$j++){//all the cols
            $data["data".$i."_".$j] = 0;//set mine with null
            $data["open".$i."_".$j] = 0;//set node with close
        }
    }
    $i=0;//reset the index,and set the mines(Random setting)
    while($i < $num){//number of mine
        $r = rand(0,$rows - 1);//row's index
        $c = rand(0,$cols - 1);//col's index
        if($data["data".$r."_".$c] == 0){//if not a mine
            $data["data".$r."_".$c] = 100;//set the node with a mine
            $i++;
        }
    }
    for($i=0;$i<$rows;$i++){//all the rows
        for($j=0;$j<$cols;$j++){//all the cols
            if($data["data".$i."_".$j] == 100)continue;//is not a mine , set number of adjacent mines
            $cnt = 0;
            if($i - 1 >= 0 && $j - 1 >= 0 && $data["data".($i - 1)."_".($j - 1)] == 100)$cnt++;//upper left
            if($i - 1 >= 0 && $data["data".($i - 1)."_".$j] == 100)$cnt++;//left
            if($i - 1 >= 0 && $j + 1 < $cols && $data["data".($i - 1)."_".($j + 1)] == 100)$cnt++;//lower left
            if($j - 1 >= 0 && $data["data".$i."_".($j - 1)] == 100)$cnt++;//upper
            if($j + 1 < $cols && $data["data".$i."_".($j + 1)] == 100)$cnt++;//lower
            if($i + 1 < $rows && $j - 1 >= 0 && $data["data".($i + 1)."_".($j - 1)] == 100)$cnt++;//upper right
            if($i + 1 < $rows && $data["data".($i + 1)."_".$j] == 100)$cnt++;//right
            if($i + 1 < $rows && $j + 1 < $cols && $data["data".($i + 1)."_".($j + 1)] == 100)$cnt++;//lower right
            $data["data".$i."_".$j] = $cnt;//set number
        }
    }
}else{
    $data = $_POST;//get data
    if($data["data".$clickvalue] == 100){//check the value of users click
        $checkflag = 2;//if click on a mine,gameover
        for($i=0;$i<$rows;$i++){//all the rows
            for($j=0;$j<$cols;$j++){//all the cols
                $data["open".$i."_".$j] = 1;//set all nodes to open
            }
        }
    }else{
        $node = explode("_", $clickvalue);//get the node of click
        openNode($node[0],$node[1]);//set nodes to open
        for($i=0;$i<$rows;$i++){//all the rows
            for($j=0;$j<$cols;$j++){//all the cols
                if($data["open".$i."_".$j] == 1)$click_count++;//get the number of opennode
            }
        }
        if($rows*$cols - $click_count == $num)$checkflag = 1;//if all the node is open,game clear
    }
}
if($checkflag == 0 && $click_count == 1){//if game is start ,time start
    $starttime = date("H:i:s");
}
if($starttime){//Computing time and display
    $now = date("H:i:s");
    $nowlist = explode(":",$now);
    $starttimelist = explode(":",$starttime);
    $time_count = $nowlist[0]*3600+$nowlist[1]*60 + $nowlist[2] - ($starttimelist[0]*3600+$starttimelist[1]*60 + $starttimelist[2]);
    $min = floor($time_count / 60);
    $sec = $time_count % 60;
    $timeshow = ($min>9?$min:"0".$min).":".($sec>9?$sec:"0".$sec);
}else{
    $timeshow = "00:00";//if game is stop , time stop
}
function openNode($i,$j){//set nodes to open,if it is can open
    global $rows;//get the rows
    global $cols;//get the cols
    global $data;//get the data
    if($i < 0 || $i >= $rows || $j < 0 || $j >= $cols || $data["open".$i."_".$j])return;//it is not a node,or it has been opened
    $data["open".$i."_".$j] = 1;//open the node
    if($data["data".$i."_".$j] > 0)return;//need to continue?
    openNode($i - 1,$j - 1);
    openNode($i - 1,$j);
    openNode($i - 1,$j + 1);
    openNode($i,$j - 1);
    openNode($i,$j + 1);
    openNode($i + 1,$j - 1);
    openNode($i + 1,$j);
    openNode($i + 1,$j + 1);
}
?>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>扫雷游戏 www.521php.com</title>
</head>
<body>
<form action="" method="post">
<input type="hidden" name="starttime" value="<?php echo $starttime;?>"/>
<input type="hidden" name="clickvalue"/>
<table style="top:10px;left:0px;z-index:0;margin:10px auto" border="1px">
<tr>
<td width="100px" align="center">
    <table width="100%" border="1px">
        <tr><td>行数:</td><td><input type="text" name="rows" value="<?php echo $rows;?>" size="1"/></td></tr>
        <tr><td>列数</td><td><input type="text" name="cols" value="<?php echo $cols;?>" size="1"/></td></tr>
        <tr><td>雷数:</td><td><input type="text" name="num" value="<?php echo $num;?>" size="1"/></td></tr>
        <tr><td colspan="2" align="center"><input type="submit" value="重新开始" name="init"/></td></tr>
    </table>
</td>
<td width="50px" align="center"><font size="10px"><?php echo $checkflag < 2?"☺":"☹";?></font></td>
<td width="100px" align="center">
<?php
    if($checkflag == 1)echo "恭喜，雷全部清掉了!<br />";
    else if($checkflag == 2)echo "太挫了，又被雷炸死了<br />";
?>
    <input type="text" name="timeshow" value="<?php echo $timeshow;?>" size="4" readonly >
</td>
</tr>
</table>
<table style="top:155px;left:0px;z-index:0;margin:10px auto" border="1px">
<?php for($i=0;$i<$rows;$i++){ ?>
    <tr>
    <?php for($j=0;$j<$cols;$j++){    ?>
        <td style="width:24px;height:24px;" align="center">
        <input type="hidden" name="open<?php echo $i."_".$j;?>" value="<?php echo $data["open".$i."_".$j];?>">
        <input type="hidden" name="data<?php echo $i."_".$j;?>" value="<?php echo $data["data".$i."_".$j];?>">
        <?php if($data["open".$i."_".$j]){//show the value of node,if the node has been opened ?>
            <?php echo $data["data".$i."_".$j]==100?"☀":$data["data".$i."_".$j];?>
        <?php }else{//show a button ,if the node has not been opened ?>
            <input type="button" value="" onclick="clickNum('<?php echo $i."_".$j;?>')"  style="width:20px;height:20px;">
        <?php } ?>
        </td>
    <?php } ?>
    </tr>
<?php } ?>
</table>
</form>
<script type="text/javascript">
function clickNum(value){//click a node
    <?php if($checkflag > 0)echo 'return;';//if game is clear or game is over ?>
    document.forms[0].clickvalue.value = value;
    document.forms[0].submit();
}
<?php if($checkflag == 0 && $click_count>0)echo 'setTimeout("timerun()",1000);';//time running ?>
<?php if($checkflag == 1)echo 'alert("恭喜，雷全部清掉了!www.521php.com");';?>
<?php if($checkflag == 2)echo 'alert("太挫了，又被雷炸死了");';?>
function timerun(){//time running
    var timelist = document.forms[0].timeshow.value.split(":");
    var sec = parseInt(timelist[1],10) + 1;
    var min = sec < 60?parseInt(timelist[0],10):(parseInt(timelist[0],10) + 1);
    document.forms[0].timeshow.value = (min>9?min:"0"+min)+":"+(sec > 9?sec:"0"+sec);
    setTimeout("timerun()",1000);
}
</script>
</body>
</html>




++++js实现页面打印功能+++++
<html>
<body>
<input id="btnPrint" type="button" value="打印" onclick="javascript:window.print();" />
 
<input id="btnPrint" type="button" value="打印预览" onclick=preview(1) />
<style type="text/css" media=print>
.noprint{display : none }
</style><p class="noprint">不需要打印的地方</p>
 
<script>
function preview(oper)
{
if (oper < 10)
{
bdhtml=window.document.body.innerHTML;//获取当前页的html代码
sprnstr="<!--startprint"+oper+"-->";//设置打印开始区域
eprnstr="<!--endprint"+oper+"-->";//设置打印结束区域
prnhtml=bdhtml.substring(bdhtml.indexOf(sprnstr)+18); //从开始代码向后取html
 
prnhtml=prnhtml.substring(0,prnhtml.indexOf(eprnstr));//从结束代码向前取html
window.document.body.innerHTML=prnhtml;
window.print();
window.document.body.innerHTML=bdhtml;
} else {
window.print();
}
}
</script>
<p>XXXXX</p>
<!--startprint1-->要打印的内容<!--endprint1-->
</body>
</html>



+++++php将金钱小写数字转为金钱大写的方法+++++++
function change_num($num)
	{
	$d = array('零','壹','贰','叁','肆','伍','陆','柒','捌','玖');
	$e = array('元','拾','佰','仟','万','拾万','佰万','仟万','亿','拾亿','佰亿','仟亿','万亿');
	$p = array('分','角');
	$zheng='整'; //追加"整"字
	$final = array(); //结果
	$inwan=0; //是否有万
	$inyi=0; //是否有亿
	$len_pointdigit=0; //小数点后长度
	$y=0;
	if($c = strpos($num, '.')) //有小数点,$c为小数点前有几位数
	{ 
	$len_pointdigit = strlen($num)-strpos($num, '.')-1; // 判断小数点后有几位数
	if($c>13) //简单的错误处理
	{
	echo "数额太大,已经超出万亿.";
	die();
	}
	elseif($len_pointdigit>2) //$len_pointdigit小数点后有几位
	{
	echo "小数点后只支持2位.";
	die();
	}
	}
	else //无小数点
	{
	$c = strlen($num);
	$zheng = '整';
	}
	for($i=0;$i<$c;$i++) //处理整数部分
	{
	$bit_num = substr($num, $i, 1); //逐字读取 左->右
	if($bit_num!=0 || substr($num, $i+1, 1)!=0) //当前是零 下一位还是零的话 就不显示
	@$low2chinses = $low2chinses.$d[$bit_num];
	if($bit_num || $i==$c-1) 
	@$low2chinses = $low2chinses.$e[$c-$i-1];
	}
	for($j=$len_pointdigit; $j>=1; $j--) //处理小数部分
	{
	$point_num = substr($num, strlen($num)-$j, 1); //逐字读取 左->右
	if($point_num != 0)
	@$low2chinses = $low2chinses.$d[$point_num].$p[$j-1];
	//if(substr($num, strlen($num)-2, 1)==0 && substr($num, strlen($num)-1, 1)==0) //小数点后两位都是0
	}
	$chinses = str_split($low2chinses,2); //字符串转换成数组
	//print_r($chinses);
	for($x=sizeof($chinses)-1;$x>=0;$x--) //过滤无效的信息
	{
	if($inwan==0&&$chinses[$x]==$e[4]) //过滤重复的"万"
	{
	$final[$y++] = $chinses[$x];
	$inwan=1;
	}
	if($inyi==0&&$chinses[$x]==$e[8]) //过滤重复的"亿"
	{
	$final[$y++] = $chinses[$x];
	$inyi=1;
	$inwan=0;
	}
	if($chinses[$x]!=$e[4]&&$chinses[$x]!=$e[8]) //进行整理,将最后的值赋予$final数组
	$final[$y++] = $chinses[$x];
	}
	$newstring=(array_reverse($final)); //$final为倒数组，$newstring为正常可以使用的数组
	$nstring=join($newstring); //数组变成字符串
	if(substr($num,-2,1)==0 && substr($num,-1)<>0) //判断原金额角位为0 ? 分位不为0 ?
	{ 
	$nstring=substr($nstring,0,(strlen($nstring)-4))."零".substr($nstring,-4,4); //这样加一个零字
	}
	$fen="分";
	$fj=substr_count($nstring, $fen); //如果没有查到分这个字
	return $nstring=($fj==0)?$nstring.$zheng:$nstring; //就将"整"加到后面
}


+++按钮弹出层js++++++
<html >
<head>
<title></title>
</style>
</head>
<body>
<a href="javascript:showMenu();void(0);">Menu1</a>
<div onblur="hideMenu();" style="border:#555 2px outset;padding:10px;display:none;" id="menu1" tabIndex=0>
<div style="height:110px; background:#ccc">点击这里 层 一样隐藏</div>
</div>
<script>
function showMenu(){
document.getElementById("menu1").style.display="";
document.getElementById("menu1").focus();
}

function hideMenu(){
document.getElementById("menu1").style.display="none";
}
</script>
</body>
</html>


+++++JS打开新窗口显示另外一个页面++++++
window.open()支持环境：
JavaScript1.0+/JScript1.0+/Nav2+/IE3+/Opera3+
<SCRIPT>
window.open ('http://www.qq.com','newwindow','height=100,width=400,top=0,left=0,toolbar=no,menubar=no,scrollbars=no, resizable=no,location=no, status=no');
</SCRIPT>
【同时弹出2个窗口】 
对源代码稍微改动下：
<script LANGUAGE="JavaScript">
<!--
function openwin()
{ window.open ("page.html", "newwindow", "height=100, width=100, top=0,left=0,toolbar=no, menubar=no, scrollbars=no, resizable=no, location=no, status=no")
//写成一行
window.open ("page2.html", "newwindow2", "height=100, width=100, top=100, left=100,toolbar=no, menubar=no, scrollbars=no, resizable=no, location=no, status=no")
//写成一行
}
//-->
</script>
为避免弹出的2个窗口覆盖，用top和left控制一下弹出的位置不要相互覆盖即可。最后用上面说过的四种方法调用即可。
注意：2个窗口的name(newwindows和newwindow2)不要相同，或者干脆全部为空。OK？
【内包含的弹出窗口-一个页面两个窗口】
上面的例子都包含两个窗口，一个是主窗口，另一个是弹出的小窗口。
通过下面的例子，你可以在一个页面内完成上面的效果。
<html>
<head>
<SCRIPT LANGUAGE="JavaScript">
function openwin()
{OpenWindow=window.open("", "newwin", "height=250, width=250,toolbar=no,scrollbars="+scroll+",menubar=no");
//写成一行
OpenWindow.document.write("<TITLE>例子</TITLE>")
OpenWindow.document.write("<BODY BGCOLOR=#ffffff>")
OpenWindow.document.write("<h1>Hello!</h1>")
OpenWindow.document.write("New window opened!")
OpenWindow.document.write("</BODY>")
OpenWindow.document.write("</HTML>")
OpenWindow.document.close()}
</SCRIPT>
</head>
<body>
<a href="#" onclick="openwin()">打开一个窗口</a>
<input type="button" onclick="openwin()" value="打开窗口">
</body>
</html>
看看 OpenWindow.document.write()里面的代码不就是标准的HTML吗？只要按照格式写更多的行即可。
千万注意多一个标签或少一个标签就会出现错误。记得用OpenWindow.document.close()结束啊。

+++++++dom最常用的+++++
document方法： 
getElementById(id) Node 返回指定结点的引用 
getElementsByTagName(name) NodeList 返回文档中所有匹配的元素的集合 
createElement(name) Node Node 
createTextNode(text) Node 创建一个纯文本结点 
ownerDocument Document 指向这个节点所属的文档 
documentElement Node 返回html节点 
document.body Node 返回body节点 
element方法： 
getAttribute(attributeName) String 返回指定属性的值 
setAttribute(attributeName,value) String 给属性赋值 
removeAttribute(attributeName) String 移除指定属性和它的值 
getElementsByTagName(name) NodeList 返回结点内所有匹配的元素的集合 
node方法： 
appendChild(child) Node 给指定结点添加一个新的子结点 
removeChild(child) Node 移除指定结点的子结点 
replaceChild(newChild,oldChild) Node 替换指定结点的子结点 
insertBefore(newChild,refChild) Node 在同一层级的结点前面插入新结点 
hasChildNodes() Boolean 如果结点有子结点则返回true 
node属性： 
nodeName String 以字符串的格式存放结点的名称 
nodeType String 以整型数据格式存放结点的类型 
nodeValue String 以可用的格式存放结点的值 
parentNode Node 指向结点的父结点的引用 
childNodes NodeList 指向子结点的引用的集合 
firstChild Node 指向子结点结合中的第一个子结点的引用 
lastChild Node 指向子结点结合中的最后一个子结点的引用 
previousSibling Node 指向前一个兄弟节点；如果这个节点就是兄弟节点，那么该值为null 
nextSibling Node 指向后一个兄弟节点；如果这个节点就是兄弟节点，那么该值为null 


+++++++++css中几处细节++++++++

细节1………………………………………………………………………………
一、当文字与图片在一行，需要将文字与图片底对齐，需要这样写：
<li>记住密码<img src="" align="bottom" style="margin-bottom:-4px"/></li>
二、当文字与图片在一行，需要将文字与图片居中对齐，需要这样写：
<li>记住密码<img src="static/img/xyx.jpg" align="middle"/></li>
四、自动最大化窗口，在 <body> 与 </body> 之间加入：
<SCRIPT language="javascript">
setTimeout('top.moveTo(0,0)',5000);
setTimeout('top.resizeTo(screen.availWidth,screen.availHeight)',5000);
</script>
五、window.opener 实际上就是用window.open打开的窗体的父窗体。
比如在父窗体parentForm里面 通过 window.open("subForm.html"),那么在subform.html中 window.opener
就代表parentForm,可以通过这种方式设置父窗体的值或者调用js方法。
1,window.opener.test(); ---调用父窗体中的test()方法；
2,如果window.opener存在,设置parentForm中stockBox的值。
  if (window.opener && !window.opener.closed)
    {
       window.opener.document.parentForm.stockBox.value = symbol;
    }
六、刷新页面的方法
Javascript刷新页面的方法：
1    history.go(0)
2    location.reload()
3    location=location
4    location.assign(location)
5    document.execCommand('Refresh')
6    window.navigate(location)
7    location.replace(location)
8    document.URL=location.href

自动刷新页面的方法:
1.页面自动刷新：把<meta http-equiv="refresh" content="20">加入<head>区域中
2.页面自动跳转：把<meta http-equiv="refresh" content="20;url=http://www.wyxg.com">加入<head>区域中
3.js自动刷新页面
<script language="JavaScript">
function myrefresh()
{
       window.location.reload();
}
setTimeout('myrefresh()',1000); //指定1秒刷新一次
</script>
4.JS刷新框架
a)刷新包含该框架的页面用  
<script language=JavaScript>
   parent.location.reload();
</script>  
b)子窗口刷新父窗口
<script language=JavaScript>
    self.opener.location.reload();
</script>
(　或　<a href="javascript:opener.location.reload()">刷新</a>   )
c)刷新另一个框架的页面
<script language=JavaScript>
   parent.另一FrameID.location.reload();
</script>
七、用过CSS hack应该知道，用下划线命名是一种hack，如使用“_style”这样的命名，可以让IE外的大部分浏览器忽略这个样式的定义，所以使用“_”做为命名时的分隔符是不规范的。
在做CSS检查时会出现错误提示。
八、IE条件注释写法
<!--[if !IE]>除IE外都可识别<![endif]-->
<!--[if IE]> 所有的IE可识别 <![endif]-->
<!--[if IE 5.0]> 只有IE5.0可以识别 <![endif]-->
九、CSS HACK 写法
第一种：
.div {
background:orange;
*background:green !important;
*background:blue;
}
第二种：
.div {
margin:10px;
*margin:15px;
_margin:15px;
}
第三种：
#div { color: #333; }
*+html #div { color: #999; }
* html #div { color: #666; }

细节2………………………………………………………………………………
一、IE6及以下不识别a 标签外的:hover伪类，在火狐，IE7里能正确达到效果，解决办法：
#show li.s1{ border:1px solid #ff9900; background:#454242;}
#show li.s2{ border:1px solid #D9D8D8; background:#312E2E;}
<li></li>
二、为元素设置hasLayout
很多IE6（或IE7）的问题可以用设置hasLayout值的方法来解决，最简单的给元素设置hasLayout值的方法是给加上CSS 的height或width(当然，zoom也可以用，但这不是CSS的一部分)。
比如设置为height:1%。如果父元素没有设置高度，那么元素的物理高度并不会改变，但是，已经具备hasLayout属性。
三、IE6下字符重复出现
   确保浮动元素设置了 display:inline;
   在浮动元素中使用 margin-right:-3px;
四、样式优先级
1，内联样式 [1.0.0.0]
2，ID选择器 [0.1.0.0]
3，类，属性，伪类 选择器 [0.0.1.0]
4，元素标签，伪元素 选择器 [0.0.0.1]
五、一个元素垂直居中的css写法
#exm{
    position:absolute;
    left:50%;
    top:50%;
    z-index:1;
    width:200px;
    height:100px;
    margin-left:-100px;
    margin-top:-52px;
}
六、zoom : normal | number
设置或检索对象的缩放比例。设置或更改一个已被呈递的对象的此属性值将导致环绕对象的内容重新流动。虽然此属性不可继承，但是它会影响对象的所有子对象( children )。
七、图片跟文字并排时, 要实现图片文字垂直居中:
1> 将line-height:设置成图片的高度,或者图片父元素的高度.
2> 再将图片的CSS设置vertical-align:middle;
八、li 元素中包含 a img 元素的时候，IE6下出现空白
解决方法 一
使 li 浮动，并设置 img 为块级元素
解决方法 二
设置 ul 的 font-size:0;
解决方法 三
设置 img 的 vertical-align: bottom;
解决方法 四
设置 img 的 margin-bottom: -5px;

细节3………………………………………………………………………………
一、被点击访问过的超链接样式不在具有hover和active
   解决方法：改变CSS属性的排列顺序: L-V-H-A
二、FF下连续长字段不能自动换行
   解决方法：word-wrap:break-word;overflow:hidden;
三、FF下父容器高度不能自适应
   解决办法：清除子元素的浮动
四、IE下图片下方产生空隙
    解决办法：定义img 为display:block，或vertical-align为top/bottom/middle/text-bottom
             定义父容器的字体大小为零，font-size:0
五、IE6下浮动元素和它相邻的非浮动元素之间有3px空隙
    解决办法：相邻的非浮动元素也设置浮动；
             浮动元素相对IE6定义_margin-right:-3px;
六、LI内容超长后以省略号显示
    解决办法： white-space:nowrap;(文本不换行)text-overflow:ellipsis; -o-text-overflow:ellipsis; overflow: hidden;
七、文本不能垂直居中
     解决办法：行高和容器高度相等line-height=height；
八、文本输入框和相邻的文本不能对齐
     解决办法：设置文本输入框vertical-align:middle;
九、IE设置滚动条样式
     解决办法：
body{
scrollbar-face-color:#f6f6f6;
scrollbar-highlight-color:#fff;
scrollbar-shadow-color:#eeeeee;
scrollbar-3dlight-color:#eeeeee;
scrollbar-arrow-color:#000;
scrollbar-track-color:#fff;
scrollbar-darkshadow-color:#fff;
}
十、IE6无法定义高度为1px的容器
     解决办法：overflow:hidden
              zoom:0.8
              line-height:1px

细节4………………………………………………………………………………
一、让层显示在flash之上
    解决办法：给FLASH设置透明<param name="wmode" value="transparent" />或者<param name="wmode" value="opaque" />
二、使一个层垂直居中浏览器中
    解决办法：使用百分比绝对定位，与外补丁负值的方法。
    position:absolute;
    top:50%;
    left:50%;
    margin:-100px auto auto -100px;
    width:200px;
    height:200px;
三、加入收藏夹
   解决办法：<script type="text/javascript">
// <![CDATA[
function bookmark(){
var title=document.title
var url=document.location.href
if (window.sidebar) window.sidebar.addPanel(title, url,"");
else if( window.opera && window.print ){
var mbm = document.create_r_rElement_x('a');
mbm.setAttribute('rel','sidebar');
mbm.setAttribute('href',url);
mbm.setAttribute('title',title);
mbm.click();}
else if( document.all ) window.external.AddFavorite( url, title);
}
// ]]>
</script>
<a href="javascript:bookmark()">加入收藏夹</a>

细节5………………………………………………………………………………
1.常见新闻列表的写法：
<ul class="list">
<li><span>2006年6月6日 </span><a href="http://www.52css.com/#">新闻标题01</a></li>
<li><span>2006年6月6日 </span><a href="http://www.52css.com/#">新闻标题02</a></li>
<li><span>2006年6月6日 </span><a href="http://www.52css.com/#">新闻标题03</a></li>
<li><span>2006年6月6日 </span><a href="http://www.52css.com/#">新闻标题04</a></li>
</ul>
2.IE实现页面背景渐变（FF及chrome不支持）
从上到下：
body{filter: progid:DXImageTransform.Microsoft.Gradient(gradientType=0,startColorStr=#ffffff,endColorStr=#000000);}
左上至右下：
FILTER: Alpha( style=1,opacity=25,finishOpacity=100,startX=50,finishX= 100,startY=50,finishY=100); background-color: skyblue;}
从左至右
body{FILTER: progid:DXImageTransform.Microsoft.Gradient(gradientType=1,startColorStr=#ffffff,endColorStr=#000000);}
从上到下
style="filter:progid:DXImageTransform.microsoft.gradient(gradienttype=0,startColorStr=blue,endColorStr=white);"
3.a hover的样式实现多种效果，可以灵活运用
     #outer a { border:1px solid #069;}
     #outer a:hover {border:1px dashed #c00;}
4.border:none;与border:0区别
     理论上的性能差异:
     border:0;把border设为“0”像素虽然在页面上看不见，但按border默认值理解，浏览器依然对border-width/border-color进行了渲染，即已经占用了内存值。
     border:none;把border设为“none”即没有，浏览器解析“none”时将不作出渲染动作，即不会消耗内存值。
    兼容性差异：
     兼容性差异只针对浏览器IE6、IE7与标签button、input而言，在win、win7、vista 的XP主题下均会出现此情况。当border为“none”时似乎对IE6/7无效边框依然存在,当border为“0”时，
     感觉比“none”更有效，所有浏览器都一致把边框隐藏，
    如何让border:none;实现全兼容？只需要在同一选择符上添加背景属性即可
5.css实现多列等高布局,正内边距与负外边距
    给每个需要实现等高的列应用样式：.e{padding-bottom:32767px;margin-bottom:-32767px;}
6.position:relative;特殊用法？？？？
     * {margin:0;padding:0;font:normal 12px/25px "宋体";}
      body {background:#f8f8f8;}
      ul {list-style:none;width:300px;height:25px;margin:20px auto;}
      li {float:left;width:86px;height:25px;text-align:center;margin:0 -5px;display:inline;}
      a {color:#fff; float:left;width:86px;height:25px;top:0;left:0;background:url(***.gif) center center no-repeat;}
      a:hover {color:#000;background:url(***.gif) 0 0 no-repeat;width:86px;position:relative;}

细节6………………………………………………………………………………
1。innerText：从起始位置到结束位置的内容，不包含标签     innerHTML
   outerHTML:包含 innerHTML和标签
     <div id="test"><span>test1</span>test2</div>
     test.innerText:test1 test2
     test.innerHTML:<span>test1</span>test2
      test.outerHTML:<div id="test"><span>test1</span>test2</div>
2。Number（）：任何包含非数字字符的字符串做参数时，结果为NaN
   parseInt():从左到右尽可能多低把字符串转化为数字，直到遇到一个非数字时停止
   isNaN():参数不是一个数字时，返回true;
3。a=23.50abc
   typeof(a)=String
   parseFloat(a)=23.5
   parseInt(a)=23
   Number(a)=NaN
4。JS变量名包含数字字母美元符下划线，不能以数字开头
5。getElementsByTagName_r()需要等文档加载完毕后才能获取到
6。nodeType：共12种，1表示元素节点，3表示文本节点
     nodeName：表示节点名称，如果是文本节点，则表示#text
     nodeValue：表示节点的值
     eg: 获取tagname为li的节点if(obj.nodeName.toLowerCase()=='li'){}
      改变P的文本内容  document.getElementsByTagName_r('p')[0].firstchild.nodeValue=''
7。父节点到子节点
     childNodes：元素所有第一层子节点列表，不包括向下更深层次的子节点
     obj.firstChild=obj.childNodes[0]
     obj.lastChild=obj.childNodes[obj.childNodes.length-1]
     hasChildNodes() 判断元素是否有子节点，返回布尔值
7。子节点到父节点
     var parentElm=myLinkItem.parentNode;
     while(parentElm,className!=‘syna’&&parentElm!='document.body')
      parentElm=parentElm.parentNode
8。修改元素属性
   1）以对象属性的方式获取或设置
var mainImage=document.getElementByIdx_x('nav').getElementsByTagName['img'][0];
    mainImage.src='';
    mainImage.alt='';
   2)用getAttribute()和setAttribute()方法

细节7………………………………………………………………………………
1。将数字转化为拥有X位小数位的形式function roundTo(base,precision)
  { var m=Math.pow(10,precision);
    var a=Math.round(base*m)/m;
    return a;
}
var n=3.942487;
roundTo(n,3)=3.942
roundTo(n,0)=3
2。创建受约束的随机数
function randomBetween(min,max)
{ return min+Math.floor(Math.random()*(max-min+1))}
3。数字转换为字符串
var a=10;
a=String(a);/a=a.toString();
4。对url的编码
var a="http://www.google.com/directoryname/?p=e";
var b=escape(a);
var c=(b);
5。改变文档内元素的类型
p--->div
首先创建一个div元素，然后复制p的子节点到div中，最后再用div 替换p
6。一个函数需要多少参数
function add(n1,n2){}
return num=add.length;
7。一个函数传入了多少参数
function add(n1,n2){
return arguments.length;}

细节8………………………………………………………………………………
1). display:inline-block;顾名思义，就是在内联情况下的块状，可以设定高度宽度。
.element-class {
display: -moz-inline-stack; //Firefox only code
display: inline-block; //some standard browsers
zoom: 1; //IE only
*display: inline; //Only IE know this code (CSS Hack)
}
2).清理浮动
.clearfix:after{visibility:hidden;display:block;font-size:0;content:" ";clear:both;height:0;}
.clearfix {zoom:1;}
3).在地址栏添加自定义图标
   首先，我们需要预先制作一个图标文件，大小为16*16像素。文件扩展名为ico，然后上传到相应目录中。在HTML源文件“<head></head>”之间添加如下代码：
<Link Rel=”ICON NAME” href=”http://图片的地址（注意与刚才的目录对应）”>，当然如果用户使用IE5或以上版本浏览时，就更简单了，只需将图片上传到网站根目录下，即可自动识

别！
4). 在IE6中设置display:block的空容器一个较小高度时，如<p style=”height:1px;”></p>，会发现其高度不能小于某个值。解决方案：设置overflow:hidden。
5).文字用省略号截断
div{width:200px;height:100px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}



+++++CSS各种居中方法++++++
水平居中的text-align:center 和 margin:0 auto
这两种方法都是用来水平居中的，前者是针对父元素进行设置而后者则是对子元素。他们起作用的首要条件是子元素必须没有被float影响，否则一切都是无用功。margin:0 auto
也可以被写成margin:0 auto 0 auto。不能理解的童鞋们可以自己去找找关于css缩写的内容。
 
垂直居中的line-height
什么？！margin在垂直居中里不起作用了？显然事情确实如此，我们仅有margin:0 auto的用法而没有auto 0的情况。至于line-height，他也是作用在父元素上，当他的值等于父元素的height值时
，内部的文字就会自动的垂直居中了。此处好像仅仅只能是文字而已，遗憾。

万能的position大法
这个方法可以说真的是万能的。当你为一个元素无法居中而困扰的时候，可以果断的使用他，而且几乎没有后遗症，绝对是前端工程师们居家旅行必备的手段之一。
具体的做法很简单，首先给父元素写上positon:relative，这么做是为了给子元素打上position:absolute的时候不会被定位到外太空去。接下去，写上子元素的height和width，这个似乎是必须的
，某些浏览器在解析的时候如果没有这2个值的话会出现意想不到的错位。接着就是整个方法的核心，给子元素再打上top:50%;left:50%以及margin-top:一半的height值的的负数;
margin- left:一半的weight值的负数。整理一下之后，可能你会给你的子元素写上这样的css（当然，父元素也要先写上width和height）
{width:100px;height:80px;position:absolute;top:50%;left:50%;margin-left:50px;margin-top:40px}
接下去就刷新页面吧，你的子元素已经是居中显示了。
使用这个方法的好处在于无论你是什么形式的内容都可以马上居中，而缺点就是必须对元素有确定的宽高值，否则的话可能就需要通过javascript来进行一些小计算了。


+++++经典css页面布局，任何分辨率下，全屏显示,兼容任何尺寸分辨率+++++++
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>经典页面布局，任何分辨率下，全屏显示</title>
<style type="text/css">
*{ list-style:none; margin:0; padding:0;}
html{ height:100%; overflow:hidden;}
body{ background:red; height:100%;}
.top,.left,.right,.bottom{ background:#000; position:absolute;}
.top{ height:70px; left:10px; top:10px; right:10px;}
.left{ width:300px; left:10px; top:90px; bottom:90px;}
.right{ left:320px; right:10px; top:90px; bottom:90px;}
.bottom{height:70px; left:10px; right:10px; bottom:10px;}
</style>
<!--[if IE 6]>
<style type="text/css">
html{ padding:90px 10px;}
.top,.left,.right,.bottom{ position:relative; top:0; right:0; bottom:0; left:0;}
.top{margin-top:-80px;}
.left{height:100%;margin-top:10px; float:left;}
.right{height:100%; margin:10px 0 0 320px;}
.bottom{margin-top:10px;}
</style>
<![endif]-->
 
</head>
<body>  
<div class="top"></div>
<div class="left"></div>
<div class="right"></div>
<div class="bottom"></div>
</body>>
</html>


+++++++++++++js代码小技巧+++++++++++
1. oncontextmenu="window.event.returnvalue=false" 将彻底屏蔽鼠标右键
<table border oncontextmenu=return(false)><td>no</table> 可用于Table

2. <body onselectstart="return false"> 取消选取、防止复制

3. onpaste="return false" 不准粘贴

4. oncopy="return false;" oncut="return false;" 防止复制

5. <link rel="Shortcut Icon" href="favicon.ico"> IE地址栏前换成自己的图标

6. <link rel="Bookmark" href="favicon.ico"> 可以在收藏夹中显示出你的图标

7. <input style="ime-mode:-Disabled"> 关闭输入法

8. 永远都会带着框架
<script language="javascript"><!--
if (window == top)top.location.href = "frames.htm"; //frames.htm为框架网页
// --></script>

9. 防止被人frame
<SCRIPT LANGUAGE=javascript><!-- 
if (top.location != self.location)top.location=self.location;
// --></SCRIPT>

10. 网页将不能被另存为
<noscript><iframe src=*.html></iframe></noscript> 

11. <input type=button value=查看网页源代码 
onclick="window.location = `view-source:`+ http://www.aa25.cn/`";>

12.删除时确认
<a href=`javascript:if(confirm("确实要删除吗?"location="boos.asp?&areyou=删除&page=1"`>删

除</a> 

13. 取得控件的绝对位置
//javascript
<script language="javascript">
function getIE(E){
var t=e.offsetTop;
var l=e.offsetLeft;
while(e=e.offsetParent){
t+=e.offsetTop;
l+=e.offsetLeft;
}
alert("top="+t+"/nleft="+l);
}
</script>

//VBScript
<script language="VBScript"><!--
function getIE()
dim t,l,a,b
set a=document.all.img1
t=document.all.img1.offsetTop
l=document.all.img1.offsetLeft
while a.tagName<>"BODY"
set a = a.offsetParent
t=t+a.offsetTop
l=l+a.offsetLeft
wend
msgbox "top="&t&chr(13)&"left="&l,64,"得到控件的位置"
end function
--></script>

14. 光标是停在文本框文字的最后
<script language="javascript">
function cc()
{
var e = event.srcElement;
var r =e.createTextRange();
r.moveStart(`character`,e.value.length);
r.collapse(true);
r.select();
}
</script>
<input type=text name=text1 value="123" onfocus="cc()">

15. 判断上一页的来源
javascript:
document.referrer

16. 最小化、最大化、关闭窗口
<object id=hh1 classid="clsid:ADB880A6-D8FF-11CF-9377-00AA003B7A11"> 
<param name="Command" value="Minimize"></object>
<object id=hh2 classid="clsid:ADB880A6-D8FF-11CF-9377-00AA003B7A11"> 
<param name="Command" value="Maximize"></object>
<OBJECT id=hh3 classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM NAME="Command" value="Close"></OBJECT>

<input type=button value=最小化 onclick=hh1.Click()>
<input type=button value=最大化 onclick=hh2.Click()>
<input type=button value=关闭 onclick=hh3.Click()>
本例适用于IE

17.屏蔽功能键Shift,Alt,Ctrl
<script>
function look(){ 
if(event.shiftKey) 
alert("禁止按Shift键!"; //可以换成ALT　CTRL
} 
document.onkeydown=look; 
</script>

18. 网页不会被缓存
<META HTTP-EQUIV="pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-cache, must-revalidate">
<META HTTP-EQUIV="expires" CONTENT="Wed, 26 Feb 1997 08:21:57 GMT">
或者<META HTTP-EQUIV="expires" CONTENT="0">

19.怎样让表单没有凹凸感？
<input type=text style="border:1 solid #000000"> 
或
<input type=text style="border-left:none; border-right:none; border-top:none; border-bottom: 

1 solid #000000"></textarea>

20.<div><span>&<layer>的区别？ 
<div>(division)用来定义大段的页面元素，会产生转行 
<span>用来定义同一行内的元素，跟<div>的唯一区别是不产生转行 
<layer>是ns的标记，ie不支持，相当于<div>

21.让弹出窗口总是在最上面:
<body onblur="this.focus();">

22.不要滚动条? 
让竖条没有: 
<body style=`overflow:-Scroll;overflow-y:hidden`> 
</body> 
让横条没有: 
<body style=`overflow:-Scroll;overflow-x:hidden`> 
</body> 
两个都去掉？更简单了 
<body scroll="no"> 
</body> 

23.怎样去掉图片链接点击后，图片周围的虚线？
<a href="#" onFocus="this.blur()"><img src="logo.jpg" border=0></a>

24.电子邮件处理提交表单
<form name="form1" method="post" action="mailto:****@***.com" enctype="text/plain"> 
<input type=submit>
</form>

25.在打开的子窗口刷新父窗口的代码里如何写？
window.opener.location.reload()

26.如何设定打开页面的大小
<body onload="top.resizeTo(300,200);">
打开页面的位置<body onload="top.moveBy(300,200);">

27.在页面中如何加入不是满铺的背景图片,拉动页面时背景图不动 
<style> 
body 
{background-image:url(logo.gif); background-repeat:no-repeat; 

background-position:center;background-attachment: fixed} 
</style> 

28. 检查一段字符串是否全由数字组成
<script language="javascript"><!--
function checkNum(str){return str.match(//D/)==null}
alert(checkNum("1232142141"
alert(checkNum("123214214a1"
// --></script>

29. 获得一个窗口的大小
document.body.clientWidth; document.body.clientHeight

30. 怎么判断是否是字符
if (/[^/x00-/xff]/g.test(s)) alert("含有汉字";
else alert("全是字符";

31.TEXTAREA自适应文字行数的多少
<textarea rows=1 name=s1 cols=27 onpropertychange="this.style.posHeight=this.scrollHeight">
</textarea>

32. 日期减去天数等于第二个日期
<script language=javascript>
function cc(dd,dadd)
{
//可以加上错误处理
var a = new Date(dd)
a = a.valueOf()
a = a - dadd * 24 * 60 * 60 * 1000
a = new Date(A)
alert(a.getFullYear() + "年" + (a.getMonth() + 1) + "月" + a.getDate() + "日"
}
cc("12/23/2002",2)
</script>

33. 选择了哪一个Radio
<HTML><script language="vbscript">
function checkme()
for each ob in radio1
if ob.checked then window.alert ob.value
next
end function
</script><BODY>
<INPUT name="radio1" type="radio" value="style" checked>style
<INPUT name="radio1" type="radio" value="barcode">Barcode
<INPUT type="button" value="check" onclick="checkme()">
</BODY></HTML>

34.脚本永不出错
<SCRIPT LANGUAGE="javascript"> 
<!-- Hide 
function killErrors() { 
return true; 
} 
window.onerror = killErrors; 
// --> 
</SCRIPT>

35.ENTER键可以让光标移到下一个输入框
<input onkeydown="if(event.keyCode==13)event.keyCode=9">

36. 检测某个网站的链接速度：
把如下代码加入<body>区域中:
<script language=javascript>
tim=1
setInterval("tim++",100)
b=1

var autourl=new Array()
autourl[1]="http://www.aa25.cn/";
autourl[2]=www.aa24.cn/";
autourl[3]="www.aa24.com.cn/";
autourl[4]="http://www.9tour.cn/";
autourl[5]="http://www.cctv.com/";

function butt(){
document.write("<form name=autof>"
for(var i=1;i<autourl.length;i++)
document.write("<input type=text name=txt"+i+" size=10 value=测试中……> =》<input type=text 

name=url"+i+" size=40> =》<input type=button value=GO 

onclick=window.open(this.form.url"+i+".value)><br>"
document.write("<input type=submit value=刷新></form>"
}
butt()
function auto(url){
document.forms[0]["url"+b].value=url
if(tim>200)
{document.forms[0]["txt"+b].value="链接超时"}
else
{document.forms[0]["txt"+b].value="时间"+tim/10+"秒"}
b++
}
function run(){for(var i=1;i<autourl.length;i++)document.write("<img 

src=http://"+autourl+"/"+Math.random()+" width=1 height=1 

onerror=auto(http://";+autourl+"`)>"}
run()</script>

37. 各种样式的光标
auto ：标准光标
default ：标准箭头
hand ：手形光标
wait ：等待光标
text ：I形光标
vertical-text ：水平I形光标
no-drop ：不可拖动光标
not-allowed ：无效光标
help ：?帮助光标
all-scroll ：三角方向标
move ：移动标
crosshair ：十字标
e-resize
n-resize
nw-resize
w-resize
s-resize
se-resize
sw-resize

38.页面进入和退出的特效
进入页面<meta http-equiv="Page-Enter" content="revealTrans(duration=x, transition=y)">
推出页面<meta http-equiv="Page-Exit" content="revealTrans(duration=x, transition=y)"> 
这个是页面被载入和调出时的一些特效。Duration表示特效的持续时间，以秒为单位。Transition表示使

用哪种特效，取值为1-23:
0 矩形缩小 
1 矩形扩大 
2 圆形缩小
3 圆形扩大 
4 下到上刷新 
5 上到下刷新
6 左到右刷新 
7 右到左刷新 
8 竖百叶窗
9 横百叶窗 
10 错位横百叶窗 
11 错位竖百叶窗
12 点扩散 
13 左右到中间刷新 
14 中间到左右刷新
15 中间到上下
16 上下到中间 
17 右下到左上
18 右上到左下 
19 左上到右下 
20 左下到右上
21 横条 
22 竖条 
23 以上22种随机选择一种

39.在规定时间内跳转
<META http-equiv=V="REFRESH" content="5;URL=http://www.51js.com"> 

40.网页是否被检索
<meta name="ROBOTS" content="属性值">
其中属性值有以下一些:
属性值为"all": 文件将被检索，且页上链接可被查询；
属性值为"none": 文件不被检索，而且不查询页上的链接；
属性值为"index": 文件将被检索；
属性值为"follow": 查询页上的链接；
属性值为"noindex": 文件不检索，但可被查询链接；
属性值为"nofollow": 文件不被检索，但可查询页上的链接。 

41.变换网页的鼠标光标
<BODY style="CURSOR: url(http://203.73.125.205/~liangmi2/farmfrog01.cur`)">

42.怎样实现在任务栏显示小图标的效果？ (要使用绝对地址)
有些站点，访问时会在地址栏地址前显出小图标，添加到收藏夹后也在收藏栏中显示图标，
这样很好的与其它站点有了区别。 
要达到这个效果，先需做出这个图标文件，图像为16*16像素，不要超过16色。文件格式为ico，然后上传至你的网站。
然后，在需要的页面中，加上以下html语句到文件的<head>和</head>之间（假设以上ico文件的地址http://happyisland.126.com/icon.ico）。
<link REL="SHORTCUT ICON"href="http:///happyisland.126.com/icon.ico";> 
如果访问者的浏览器是IE5.0，就不需加任何代码，只要将图标文件上传到网站的根目录下即可。
1,META标签里的代码是什么意思？ 
<META>是放于<HEAD>与</HEAD>之间的标记.以下是我总结它在网页中最常见的几种。 
<meta name="Keywords" content="图片, 新闻, 音乐, 软件"> 
该网页的关键字，作用于搜索引擎的登录，事实上它在现在的网站中并没什么用。 
<meta http-equiv="Content-Type" content="text/html; charset=gb2312"> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
设定这是 HTML 文件及其编码语系，简体中文网页使用charset=gb2312，繁体中文使用charset=big5，或者不设编码也可，纯英文网页建议使用 iso-8859-1。 
<meta name="GENERATOR" content="Microsoft FrontPage 5.0"> 
这只表示该网页由什么编辑器写的。 
<meta http-equiv="refresh" content="10; url=http://www.hkiwc.com"> 
这行较为实用，能于预定秒数内自动转到指定网址。原代码中 10 表示 10秒。 

2，怎么改变滚动条的颜色，只有ie5.5版本以上才能支持。 
这是使用CSS语言，在次说明一下，它和我的浏览器版本有一定的关系。 
scrollbar-arrow-color：上下按钮上三角箭头的颜色。 
scrollbar-base-color：滚动条的基本颜色。 
scrollbar-dark-shadow-color：立体滚动条强阴影的颜色 
scrollbar-face-color：立体滚动条凸出部分的颜色 
scrollbar-highlight-color：滚动条空白部分的颜色 
scrollbar-shadow-color立体滚动条阴影的颜色。
scrollbar-track-color:#99CC33;
scrollbar-3dlight-color:#A8CBF1; 
代码如下： 
<style> 
<!-- 
BODY {
scrollbar-face-color:#99CC33;//(立体滚动条凸出部分的颜色) 
scrollbar-highlight-color:#A8CBF1;//(滚动条空白部分的颜色) 
scrollbar-shadow-color:#A8CBF1;//(立体滚动条阴影的颜色) 
scrollbar-arrow-color:#FF9966;//(上下按钮上三角箭头的颜色) 
scrollbar-base-color:#A8CBF1; //(滚动条的基本颜色) 
scrollbar-darkshadow-color:#A8CBF1; //(立体滚动条强阴影的颜色)
scrollbar-track-color:#99CC33;
scrollbar-3dlight-color:#A8CBF1; 
} 
--> 
</style> 
在这我补充几点： 
1.让浏览器窗口永远都不出现滚动条。 
<body style="overflow-x:hidden;overflow-y:hidden">或<body style="overflow:hidden"> 或<body scroll=no> 
2，没有水平滚动条 
<body style="overflow-x:hidden"> 
3，没有垂直滚动条 
<body style="overflow-y:hidden"> 

3,如何给图片抖动怎做的. 
<SCRIPT language=javascript1.2> 
<!-- 
var rector=2 
var stopit=0 
var a=1 
var count=0 
function init(which){ 
stopit=0 
shake=which 
shake.style.left=0 
shake.style.top=0 
} 
function rattleimage(){ 
if ((!document.all&&!document.getElementByIdx_x)||stopit==1||count==100) 
return 
count++ 
if (a==1){ 
shake.style.top=parseInt(shake.style.top)+rector 
} 
else if (a==2){ 
shake.style.left=parseInt(shake.style.left)+rector 
} 
else if (a==3){ 
shake.style.top=parseInt(shake.style.top)-rector 
} 
else{ 
shake.style.left=parseInt(shake.style.left)-rector 
} 
if (a<4) 
a++ 
else 
a=1 
setTimeout("rattleimage()",50) 
} 
function stoprattle(which){ 
stopit=1 
count=0 
which.style.left=0 
which.style.top=0 
} 
//--> 
</SCRIPT> 
<style>.shakeimage {POSITION: relative} 
</style> 
<img src="图片的路径" onmouseout=stoprattle(this) onmouseover=init(this);rattleimage() class="shakeimage">


+++JS数学函数+++++

Math对象 
  1. Math.abs(num) : 返回num的绝对值 
  2. Math.acos(num) : 返回num的反余弦值 
  3. Math.asin(num) : 返回num的反正弦值 
  4. Math.atan(num) : 返回num的反正切值 
  5. Math.atan2(y,x) : 返回y除以x的商的反正切值 
  6. Math.ceil(num) : 返回大于num的最小整数 
  7. Math.cos(num) : 返回num的余弦值 
  8. Math.exp(x) : 返回以自然数为底,x次幂的数 
  9. Math.floor(num) : 返回小于num的最大整数 
  10.Math.log(num) : 返回num的自然对数 
  11.Math.max(num1,num2) : 返回num1和num2中较大的一个 
  12.Math.min(num1,num2) : 返回num1和num2中较小的一个 
  13.Math.pow(x,y) : 返回x的y次方的值 
  14.Math.random() : 返回0到1之间的一个随机数 
  15.Math.round(num) : 返回num四舍五入后的值 
  16.Math.sin(num) : 返回num的正弦值 
  17.Math.sqrt(num) : 返回num的平方根 
  18.Math.tan(num) : 返回num的正切值 
  19.Math.E : 自然数(2.718281828459045) 
  20.Math.LN2 : 2的自然对数(0.6931471805599453) 
  21.Math.LN10 : 10的自然对数(2.302585092994046) 
  22.Math.LOG2E : log 2 为底的自然数(1.4426950408889634) 
  23.Math.LOG10E : log 10 为底的自然数(0.4342944819032518) 
  24.Math.PI : π(3.141592653589793) 
  25.Math.SQRT1_2 : 1/2的平方根(0.7071067811865476) 
  26.Math.SQRT2 : 2的平方根(1.4142135623730951)





+++++++++JS字符串(String) ++++++++
  1.声明 
    var myString = new String("Every good boy does fine."); 
    var myString = "Every good boy does fine."; 
  2.字符串连接 
    var myString = "Every " + "good boy " + "does fine."; 
    var myString = "Every ";  myString += "good boy does fine."; 
  3.截取字符串
    //截取第 6 位开始的字符 
    var myString = "Every good boy does fine."; 
    var section = myString.substring(6);    //结果: "good boy does fine."      
    //截取第 0 位开始至第 10 位为止的字符 
    var myString = "Every good boy does fine."; 
    var section = myString.substring(0,10); //结果: "Every good"   
    //截取从第 11 位到倒数第 6 位为止的字符 
    var myString = "Every good boy does fine."; 
    var section = myString.slice(11,-6);    //结果: "boy does" 
    //从第 6 位开始截取长度为 4 的字符 
    var myString = "Every good boy does fine."; 
    var section = myString.substr(6,4);     //结果: "good" 
  4.转换大小写 
    var myString = "Hello"; 
    var lcString = myString.toLowerCase();  //结果: "hello" 
    var ucString = myString.toUpperCase();  //结果: "HELLO" 
  5.字符串比较 
    var aString = "Hello!"; 
    var bString = new String("Hello!"); 
    if( aString == "Hello!" ){ }    //结果: true 
    if( aString == bString ){ }     //结果: true 
    if( aString === bString ){ }    //结果: false (两个对象不同,尽管它们的值相同) 
  6.检索字符串 
    var myString = "hello everybody."; 
    // 如果检索不到会返回-1,检索到的话返回在该串中的起始位置 
    if( myString.indexOf("every") > -1 ){ } //结果: true 
  7.查找替换字符串 
    var myString = "I is your father."; 
    var result = myString.replace("is","am");   //结果: "I am your father." 
  8.特殊字符: 
    \b : 后退符         \t : 水平制表符 
    \n : 换行符         \v : 垂直制表符 
    \f : 分页符         \r : 回车符 
    \" : 双引号         \' : 单引号 
    \\ : 反斜杆  
  9.将字符转换成Unicode编码 
    var myString = "hello"; 
    var code = myString.charCodeAt(3);  //返回"l"的Unicode编码(整型) 
    var char = String.fromCharCode(66); //返回Unicode为66的字符  
  10.将字符串转换成URL编码 
    var myString = "hello all"; 
    var code = encodeURI(myString);     //结果: "hello%20all" 
    var str = decodeURI(code);          //结果: "hello all" 
    //相应的还有:  encodeURIComponent()  decodeURIComponent() 





+++++++JS日期型(Date) +++++++++
  1.声明 
    var myDate = new Date();    //系统当前时间  
    var myDate = new Date(yyyy, mm, dd, hh, mm, ss); 
    var myDate = new Date(yyyy, mm, dd); 
    var myDate = new Date("monthName dd, yyyy hh:mm:ss"); 
    var myDate = new Date("monthName dd, yyyy"); 
    var myDate = new Date(epochMilliseconds); 
  2.获取时间的某部份 
    var myDate = new Date(); 
    myDate.getYear();       //获取当前年份(2位) 
    myDate.getFullYear();   //获取完整的年份(4位,1970-????) 
    myDate.getMonth();      //获取当前月份(0-11,0代表1月) 
    myDate.getDate();       //获取当前日(1-31) 
    myDate.getDay();        //获取当前星期X(0-6,0代表星期天)   
    myDate.getTime();       //获取当前时间(从1970.1.1开始的毫秒数)   时间戳！！
    myDate.getHours();      //获取当前小时数(0-23) 
    myDate.getMinutes();    //获取当前分钟数(0-59) 
    myDate.getSeconds();    //获取当前秒数(0-59) 
    myDate.getMilliseconds();   //获取当前毫秒数(0-999) 
    myDate.toLocaleDateString();    //获取当前日期 
    myDate.toLocaleTimeString();    //获取当前时间 
    myDate.toLocaleString( );       //获取日期与时间 
  3.计算之前或未来的时间 
    var myDate = new Date(); 
    myDate.setDate(myDate.getDate() + 10);  //当前时间加10天 
    //类似的方法都基本相同,以set开头,具体参考第2点 
  4.计算两个日期的偏移量 
    var i = daysBetween(beginDate,endDate); //返回天数 
    var i = beginDate.getTimezoneOffset(endDate); //返回分钟数 
  5.检查有效日期 
    //checkDate() 只允许"mm-dd-yyyy"或"mm/dd/yyyy"两种格式的日期 
    if( checkDate("2006-01-01") ){ }      
    //正则表达式(自己写的检查 yyyy-mm-dd, yy-mm-dd, yyyy/mm/dd, yy/mm/dd 四种) 
    var r = /^(\d{2}|\d{4})[\/-]\d{1,2}[\/-]\d{1,2}$/; 
    if( r.test( myString ) ){ }


+++++javascript的数组的操作+++++
//定义数组
        var pageIds = new Array();
        pageIds.push('A');
        数组长度
        pageIds.length;
//shift：删除原数组第一项，并返回删除元素的值；如果数组为空则返回undefined 
var a = [1,2,3,4,5]; 
var b = a.shift(); //a：[2,3,4,5]   b：1 
//unshift：将参数添加到原数组开头，并返回数组的长度 
var a = [1,2,3,4,5]; 
var b = a.unshift(-2,-1); //a：[-2,-1,1,2,3,4,5]   b：7 
//注：在IE6.0下测试返回值总为undefined，FF2.0下测试返回值为7，所以这个方法的返回值不可靠，需要用返回值时可用splice代替本方法来使用。 
//pop：删除原数组最后一项，并返回删除元素的值；如果数组为空则返回undefined 
var a = [1,2,3,4,5]; 
var b = a.pop(); //a：[1,2,3,4]   b：5 
//push：将参数添加到原数组末尾，并返回数组的长度 
var a = [1,2,3,4,5]; 
var b = a.push(6,7); //a：[1,2,3,4,5,6,7]   b：7 
//concat：返回一个新数组，是将参数添加到原数组中构成的 
var a = [1,2,3,4,5]; 
var b = a.concat(6,7); //a：[1,2,3,4,5]   b：[1,2,3,4,5,6,7] 
//splice(start,deleteCount,val1,val2,)：从start位置开始删除deleteCount项，并从该位置起插入val1,val2, 
var a = [1,2,3,4,5]; 
var b = a.splice(2,2,7,8,9); //a：[1,2,7,8,9,5]   b：[3,4] 
var b = a.splice(0,1); //同shift 
a.splice(0,0,-2,-1); var b = a.length; //同unshift 
var b = a.splice(a.length-1,1); //同pop 
a.splice(a.length,0,6,7); var b = a.length; //同push 
//reverse：将数组反序 
var a = [1,2,3,4,5]; 
var b = a.reverse(); //a：[5,4,3,2,1]   b：[5,4,3,2,1] 
//sort(orderfunction)：按指定的参数对数组进行排序 
var a = [1,2,3,4,5]; 
var b = a.sort(); //a：[1,2,3,4,5]   b：[1,2,3,4,5] 
//slice(start,end)：返回从原数组中指定开始下标到结束下标之间的项组成的新数组 
var a = [1,2,3,4,5]; 
var b = a.slice(2,5); //a：[1,2,3,4,5]   b：[3,4,5] 
//join(separator)：将数组的元素组起一个字符串，以separator为分隔符，省略的话则用默认用逗号为分隔符 
var a = [1,2,3,4,5]; 
var b = a.join("|"); //a：[1,2,3,4,5]   b："1|2|3|4|5" 


++++++javascript实现MD5加密，需要插件支持，在工具包++++
使用方法如下：
<script type="text/javascript" src="md5.js"></script>
在需要使用MD5加密的地方如此调用:
<script type="text/javascript">
var hash=hex_md5('www.phpernote.com');
</script>


+++javascript实现replaceall(全局匹配并替换)的方法++++++
其实replace本身也可以实现这种功能的，但要通过正则的形式加个参数g，例如：
str.replace(/www.baidu.com/g,'www.phpernote.com');


++++javascript验证日期时间有效性的方法+++++
1--》
//| 日期有效性验证
//| 格式为：YYYY-MM-DD或YYYY/MM/DD 
function IsValidDate(DateStr){
    var sDate=DateStr.replace(/(^\s+|\s+$)/g,'');//去两边空格;
    if(sDate==''){
        return true;
    }
    //如果格式满足YYYY-(/)MM-(/)DD或YYYY-(/)M-(/)DD或YYYY-(/)M-(/)D或YYYY-(/)MM-(/)D就替换为''
    //数据库中，合法日期可以是:YYYY-MM/DD(2003-3/21),数据库会自动转换为YYYY-MM-DD格式
    var s=sDate.replace(/[\d]{ 4,4 }[\-/]{1}[\d]{1,2}[\-/]{1}[\d]{1,2}/g,'');
    if(s==''){//说明格式满足YYYY-MM-DD或YYYY-M-DD或YYYY-M-D或YYYY-MM-D
        var t=new Date(sDate.replace(/\-/g,'/'));
        var ar=sDate.split(/[-/:]/);
        if(ar[0]!=t.getYear()||ar[1]!=t.getMonth()+1||ar[2]!=t.getDate()){//alert('错误的日期格式！格式为：YYYY-MM-DD或YYYY/MM/DD。注意闰年。');
            return false;
        }
    }else{//alert('错误的日期格式！格式为：YYYY-MM-DD或YYYY/MM/DD。注意闰年。');
        return false;
    }
    return true;
}
2--》
//| 日期时间有效性检查
//| 格式为：YYYY-MM-DD HH:MM:SS
function CheckDateTime(str){
    var reg=/^(\d+)-(\d{ 1,2})-(\d{ 1,2})(\d{ 1,2}):(\d{1,2}):(\d{1,2})$/;
    var r=str.match(reg);
    if(r==null) return false;
    r[2]=r[2]-1;
    var d= new Date(r[1],r[2],r[3],r[4],r[5],r[6]);
    if(d.getFullYear()!=r[1]) return false;
    if(d.getMonth()!=r[2]) return false;
    if(d.getDate()!=r[3]) return false;
    if(d.getHours()!=r[4]) return false;
    if(d.getMinutes()!=r[5]) return false;
    if(d.getSeconds()!=r[6]) return false;
    return true;
}


+++++js限制只能输入英文字母和数字+++++
<html xmlns="http://www.phpernote.com/javascript-function/742.html">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>js限制只能输入英文字母和数字,不能输入中文和其他特殊字符的办法</title>
</head>
<body>
<input type="text" name="username" onkeyup="value=value.replace(/[^\w\.\/]/ig,'')" />
<p>以上文本框中仅允许输入英文字母，小数点，数字，禁止输入中文字符以及其他特殊字符！</p>
</body>
</html>


+++++定时跳转页面+++++
（1）使用setTimeout函数实现定时跳转（如下代码要写在body区域内）
<script type="text/javascript">
//3秒钟之后跳转到指定的页面
setTimeout(window.location.href='http://www.phpernote.com/div-css/354.html',3);
</script>
（2）html代码实现，在页面的head区域块内加上如下代码
<!--5秒钟后跳转到指定的页面-->
<meta http-equiv="refresh" content="5;url=http://www.phpernote.com/php-function/241.html" />

++++js大小写转换+++++
toLocaleUpperCase 将字符串中所有的字母字符都将被转换为大写的，同时适应宿主环境的当前区域设置。
toUpperCase 将字符串中的所有字母都被转化为大写字母。
toLocaleLowerCase 将字符串所有的字母字符都被转换为小写，同时考虑到宿主环境的当前区域设置。
toLowerCase 将字符串中的字母被转换为小写字母。


++++js地址栏特效代码++++++
可以在淘宝网试试看，有趣（用下面的代码覆网址）。
javascript:R=0;x1=.1;y1=.05;x2=.25;y2=.24;x3=1.6;y3=.24;x4=300;y4=200;x5=300;y5=200;DI=document.getElementsByTagName("img");DIL=DI.length;function A(){for(i=0;i-DIL;i++){DIS=DI[i].style;DIS.position='absolute';DIS.left=(Math.sin(R*x1+i*x2+x3)*x4+x5)+"px";DIS.top=(Math.cos(R*y1+i*y2+y3)*y4+y5)+"px"}R++}setInterval('A()',5);void(0);

+++js阻止窗口关闭+++++
<script type="text/javascript">
    window.onbeforeunload=function(event){
        return 'hello';
    }
</script>


++++++JS判断图片是否加载完毕++++++
<script language="javascript">
function SImage(callback){
    var img=new Image();
    this.img=img;
    var appname=navigator.appName.toLowerCase();
    if(appname.indexOf("netscape")==-1){
        //ie，在 ie 下面使用 onreadystatechange 事件
        img.onreadystatechange=function(){
            if(img.readyState=="complete"){
                callback(img);
            }
        };
    }else{
        //firefox
        img.onload=function(){
            if(img.complete==true){
                callback(img);
            }
        }
    }
}
SImage.prototype.get=function(url){
    this.img.src=url;
}
//使用案例
var img=new SImage(icall);
img.get("http://space.cnblogs.com/images/logo.gif");
function icall(obj){
    alert(obj.width);
}
</script>


+++++检测IE6工具，如果是IE6则会跳出这个警告+++++
<!--[if lte IE 6]>
<script type="text/javascript" src="http://www.phpernote.com/web_tools/js/noIe6.js"></script>
<![endif]-->


+++++++JS禁止浏览器直接选择复制文章内容+++++
1--》全局不可复制：
针对IE：
<script language="javascript">
document.onselectstart=new Function("event.returnValue=false;"); //禁止选择,也就是无法复制
</script>
针对firefox：
<style type="text/css">body{-moz-user-select:none;}</style>
所有浏览器兼容：
<style type="text/css">  
body {  
    -webkit-touch-callout: none;  
    -webkit-user-select: none;  
    -khtml-user-select: none;  
    -moz-user-select: none;  
    -ms-user-select: none;  
    user-select: none;  
}  
</style> 

2--》设置局部不可复制：
<style type="text/css">  
.unselectable {  
   -moz-user-select: -moz-none;  
   -khtml-user-select: none;  
   -webkit-user-select: none;  
   /*  
     Introduced in IE 10.  
     See http://ie.microsoft.com/testdrive/HTML5/msUserSelect/  
   */  
   -ms-user-select: none;  
   user-select: none;  
}  
</style>  


++++屏蔽js错误报错+++++
<script language="javascript">
<!--
/*屏蔽js错误*/
function killerrors(){
   return true;
}
window.onerror=killerrors;
//-->
</script>


++++js控制文字大中小显示++++++
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>js控制文字大中小显示</title>
</head>
<body>
<script language="javascript">
function setFontSize(objID,size){
    document.getElementById(objID).style.fontSize=size+'px';
}
</script>
<div id="content">
<p>学习笔记和生活经验积累!</p>
</div>
<a onclick="setFontSize('content',20)">大</a>
<a onclick="setFontSize('content',14)">中</a>
<a onclick="setFontSize('content',12)">小</a>
</body>
</html>



+++++JS如何判断鼠标向上还是向下滚动+++++++
<label for="wheelDelta">滚动值:</label>(IE/Opera)<input type="text" id="wheelDelta"/>
<label for="detail">滚动值:(Firefox)</label><input type="text" id="detail"/>
<script type="text/javascript">
var scrollFunc=function(e){
    e=e || window.event;
    var t1=document.getElementById("wheelDelta");
    var t2=document.getElementById("detail");
    if(e.wheelDelta){//IE/Opera/Chrome
        t1.value=e.wheelDelta;
    }else if(e.detail){//Firefox
        t2.value=e.detail;
    }
}
/*注册事件*/
if(document.addEventListener){
    document.addEventListener('DOMMouseScroll',scrollFunc,false);
}//W3C
window.onmousewheel=document.onmousewheel=scrollFunc;//IE/Opera/Chrome
</script>



++++++鼠标移动到文字上出现提示文字特效+++++++
<html>
<head>
<title>鼠标移动到文字上出现提示特效</title>
</head>
<body>
<script>
function $(id){
    return document.getElementById(id);
}
document.write("<div id=\"ts\" style=\"position:absolute;background-color:#FFFFE6;font-size: 12px;padding: 3px;  border: 1px solid #FFCC99;display:none\"></div>");
function mmove(o,s){
    var evt=event||window.event;
    var x=evt.clientX+5;
    var y=evt.clientY+20;
    $('ts').style.left=x+'px';
    $('ts').style.top=y+'px';
    if(s==''||typeof(s)=='undefined'){
        $('ts').innerHTML=o.innerHTML;
    }else{
        $('ts').innerHTML=s;
    }
    $('ts').style.display='';
}
function mout(){
    $('ts').style.display='none';
}
</script>
<p>
<a href="#" onMouseMove="mmove(this)" onMouseOut="mout();">aaaaaaaaa<br><font color=red>aaaaaaa></font></a>
</p>
<p>
<a href="#" onMouseMove="mmove(this,'哈哈')" onMouseOut="mout();">bbbbbbbbbbb</a>
</p>
<p>
<a href="#" onMouseMove="mmove(this)" onMouseOut="mout();">cccccccccccc</a>
</p>
<p>
<img src="http://bbs.blueidea.com/images/default/logo.gif"  onmousemove="mmove(this,' 蓝色理想<br><font color=red>实现梦想</font>')" onMouseOut="mout();">
</p>
<p>
<a href="#" onMouseMove="mmove(this)" onMouseOut="mout();">eeeeeeeeeeeee</a>
</p>
<p>
<a href="#" onMouseMove="mmove(this)" onMouseOut="mout();">想做个特效就是移到文字上面或是图片上面出现提示，title能够定义属性吗？如换行，文字色彩等<br />
<br />
在坛内看到一个移<span><font color=blue>到小图片上出现大图片的效果，效果不错</font></span>，感觉挺复杂，不知道有没有更简单一点的。
</a>
</p>
<p>
<a href="#" onMouseMove="mmove(this)" onMouseOut="mout();">ggggggggggggggggggggggggggg</a>
</p>
<p>
<a href="#" onMouseMove="mmove(this)" onMouseOut="mout();">hhhhhhhhhhhhhhhhhhhhhhhhh</a>
</p>
<p>
<a href="#" onMouseMove="mmove(this)" onMouseOut="mout();">想做个特效就是移到文字上面或是图片上面出现提示，title能够定义属性吗？如换行，文字色彩等<br />
<br />
在坛内看到一个移<span><font color="#CC0000">到小图片上出现大图片的效果，效果不错</font></span>，感觉挺复杂，不知道有没有更简单一点的。
</a>
</p>
</body>
</html>



+++++++JS用户复制网页文章自动添加版权信息++++++
<script type="text/javascript">
document.body.oncopy = function(){
    setTimeout(
        function (){
        var text = clipboardData.getData("text");
        if(text){
            text = text + "\r\n本文来自:Jason 详细出处参考："+location.href; clipboardData.setData("text", text);
        }
    },100)
}
</script>


++++++兼容IE和firefox的设置首页和加入收藏的JavaScript代码+++++++
适合IE内核的浏览器：
<a href="#" onclick="this.style.behavior='url(#default#homepage)';this.setHomePage('http://phpernote.com')">设为首页</a>
<a href="javascript:window.external.AddFavorite('http://phpernote.com','PHP程序员的笔记')">添加收藏</a>
兼容IE和火狐浏览器的方案：
//加入收藏
function AddFavorite(URL,Title){
    URL=URL||window.location.href;
    Title=Title||document.title;
    try{
        window.external.addFavorite(URL,Title);
    }catch(e){
        try{
            window.sidebar.addPanel(Title,URL,"");
        }catch(e){
            alert("加入收藏失败，请使用Ctrl+D进行添加");
        }
    }
}
//设为首页
function setHomepage(URL){
    URL=URL||window.location.href;
    if(document.all){//IE类浏览器
        document.body.style.behavior='url(#default#homepage)';
        document.body.setHomePage(URL);
    }else if(window.sidebar){//火狐类浏览器
        if(window.netscape){
            try{
                netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
            }catch(e){
                alert("该操作被浏览器拒绝，如果想启用该功能，请在地址栏内输入 about:config,然后将项 signed.applets.codebase_principal_support 值该为true");
            }
        }
        var prefs=Components.classes['@mozilla.org/preferences-service;1'].getService(Components.interfaces.nsIPrefBranch);
        prefs.setCharPref('browser.startup.homepage',URL);
    }
}
然后就是页面中的调用方式：
<a href ="javascript:void(0)" onclick ="setHomepage()">设为首页</a>
<a href="javascript:void(0)" onclick ="AddFavorite()">加入收藏</a>
<a href="javascript:void(0)" onclick ="AddFavorite('http://www.qq.com/','腾讯')">加入收藏</a>



+++++javascript图片预加载技术+++++
// 更新：
// 05.27:1、保证回调执行顺序：error > ready > load；2、回调函数this指向img本身
// 04-02:1、增加图片完全加载后的回调 2、提高性能
/**
 * 图片头数据加载就绪事件 - 更快获取图片尺寸
 * @version 2011.05.27
 * @author  TangBin
 * @param   {String}    图片路径
 * @param   {Function}  尺寸就绪
 * @param   {Function}  加载完毕(可选)
 * @param   {Function}  加载错误(可选)
 */
var imgReady=(function(){
    var list=[],intervalId=null,
    // 用来执行队列
    tick=function(){
        var i=0;
        for(;i<list.length;i++){
            list[i].end?list.splice(i--,1):list[i]();
        };
        !list.length&&stop();
    },
    // 停止所有定时器队列
    stop=function(){
        clearInterval(intervalId);
        intervalId=null;
    };
    return function(url,ready,load,error){
        var onready,width,height,newWidth,newHeight,
        img=new Image();
        img.src=url;
        // 如果图片被缓存，则直接返回缓存数据
        if(img.complete){
            ready.call(img);
            load&&load.call(img);
            return;
        };
        width=img.width;
        height=img.height;
        // 加载错误后的事件
        img.onerror=function(){
            error&&error.call(img);
            onready.end=true;
            img=img.onload=img.onerror=null;
        };
        // 图片尺寸就绪
        onready=function(){
            newWidth=img.width;
            newHeight=img.height;
            if(newWidth !== width || newHeight !== height ||
                // 如果图片已经在其他地方加载可使用面积检测
                newWidth * newHeight > 1024
            ){
                ready.call(img);
                onready.end=true;
            };
        };
        onready();
        // 完全加载完毕的事件
        img.onload=function(){
            // onload在定时器时间差范围内可能比onready快
            // 这里进行检查并保证onready优先执行
            !onready.end&&onready();
            load&&load.call(img);
            // IE gif动画会循环执行onload，置空onload即可
            img=img.onload=img.onerror=null;
        };
        // 加入队列中定期执行
        if(!onready.end){
            list.push(onready);
            // 无论何时只允许出现一个定时器，减少浏览器性能损耗
            if(intervalId === null) intervalId=setInterval(tick,40);
        };
    };
})();
调用案例如下：
imgReady('http://www.phpernote.com/images/logo.gif',function(){
    alert('size ready:width='+this.width+';height='+this.height);
});



+++++Js倒计时效果倒计时按钮++++++
<html xmlns="http://www.phpernote.com/javascript-function/38.html">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Js实现倒计时效果</title>
<script language="javascript">
//var timeLeft=90*60*1000;//这里设定的时间是90分钟
var timeLeft=6*1000;//这里设定的时间是6秒
function countTime(){
    if(timeLeft==0){//这里就是时间到了之后应该执行的动作了
        document.getElementById('ok').disabled=false;
        document.getElementById('ok').value='我同意（提交答卷）';
    return;
    }
    var startMinutes=parseInt(timeLeft/(60*1000),10);
    var startSec=parseInt((timeLeft-startMinutes*60*1000)/1000);
    document.getElementById('show').innerHTML="剩余时间："+startMinutes+"分钟"+startSec+"秒";
    document.getElementById('ok').value=startSec+'秒';
    timeLeft=timeLeft-1000;
    setTimeout('countTime()',1000);
}
</script>
</head>
<body onload="countTime()">
<div id="show"></div>
<input type="button" id="ok" disabled value="" style="width:200px;" />
</body>
</html>



+++++JS地址栏代码显示页面内所有加链接的图片的大小++++++
javascript:a=document.images;d=document;for(i=0;i<a.length;i++){t=a[i];p=t.parentNode;if(p.tagName == "A"){p.style.position="relative";p.style.display="block";p.style.width=t.width+"px";p.style.height=t.height+"px";s=d.createElement("span");s.style.position="absolute";s.style.color = "white";s.style.backgroundColor = "red";s.style.right="0px";s.style.bottom="0px";s.innerHTML=t.width+"x"+t.height;p.appendChild(s);}}void(0);



++++禁止网页右键、复制、另存为、查看源文件等功能实现网页源代码保护++++
1、禁止右键菜单
<script type="text/javascrpt" language="javascript">
//方法一
function noMenuOne()
{
alert('禁止右键菜单!');
return false;
}
document.oncontextmenu = noMenuOne;
//方法二
function noMenuTwo()
{
if(event.button == 2)
{
alert('禁止右键菜单!');
return false;
}
}
document.onmousedown = noMenuTwo;
</script>
2、禁止复制(Ctrl+C)
<script type="text/javascript" language="javascript">
function noCopy()
{
alert("禁止使用Ctrl+C进行复制操作!");
event.returnValue = false;
}
</script>
//<body oncopy = "noCopy()">
3、禁止另存为
<!--在<body></body>之间加入代码 -->
<noscript><iframe src='*.htm'></iframe></noscript>
4、禁止缓存 
禁止缓存 在页面中使用如下HTML标记:
<HEAD>
<META http-equiv=Pragma content=no-cache>
<META http-equiv=Cache-Control content=no-cache>
<META http-equiv=Expires content=0>
</HEAD>



+++++JavaScript操作cookie的相关函数++++++
//设置cookie函数，三个参数，一个是cookie的名子，一个是值，一个是设置cookie保存时间，单位：天
function SetCookie(name,value,days){
    var days=arguments[2]?arguments[2]:30; //此 cookie 将被保存 30 天
    var exp=new Date();    //new Date("December 31, 9998");
    exp.setTime(exp.getTime() + days*86400000);
    document.cookie=name + "="+ escape (value) + ";expires=" + exp.toGMTString();
}
//取cookies函数
function getCookie(name){
    var arr=document.cookie.match(new RegExp("(^| )"+name+"=([^;]*)(;|$)"));
    if(arr!=null){
        return unescape(arr[2]);
    }
    return null;
}
//删除cookie函数
function delCookie(name){
    var exp = new Date();
    exp.setTime(exp.getTime() - 1);
    var cval=getCookie(name);
    if(cval!=null){
        document.cookie= name + "="+cval+";expires="+exp.toGMTString();
    }
}

+++++css上角标与下角标++++
<p>数学公式 ： (x+y)<sup>2</sup> = x<sup>2</sup> + 2xy + y<sup>2</sup></p>
<p>化学方程式 ： H<sub>2</sub>O = 2H + O</p>


++++兼容所有浏览器的层的透明度++++++
.transparent{
    filter:alpha(opacity=50);
    -moz-opacity:0.5;
    -khtml-opacity: 0.5;
    opacity: 0.5;
}


+++++css解决IE6的双倍边距bug+++++
在网页制作中经常遇到IE6双倍边距的bug，解决这个问题只需增加如下一个如下的css属性即达成目的：
display:inline



+++++CSS中的css hack+++++
针对不同的浏览器写不同的CSS code的过程，就叫CSS hack,也叫写CSS hack。
CSS Hack的原理是什么？
　　由于不同的浏览器对CSS的支持及解析结果不一样，还由于CSS中的优先级的关系。我们就可以根据这个来针对不同的浏览器来写不同的CSS。
　　比如 IE6能识别下划线"_"和星号" * "，IE7能识别星号" * "，但不能识别下划线"_"，而firefox两个都不能认识。等等
　　书写顺序，一般是将识别能力强的浏览器的CSS写在后面。下面如何写里面说得更详细些。
如何写CSS Hack？
　比如要分辨IE6和firefox两种浏览器，可以这样写：
<style>
div{
　　background:green; /* for firefox */
　　*background:red; /* for IE6 */
}
</style>
其结果是我在IE6中看到是红色的，在firefox中看到是绿色的。


+++在网页中使用Favicon.ico++++++
<link rel="icon" href="/dir/favicon.ico" mce_href="/dir/favicon.ico" type="image/x-icon">
<link rel="shortcut icon" href="/dir/favicon.ico" mce_href="/dir/favicon.ico" type="image/x-icon">
(一个在线制作favicon.ico的网站：http://www.chami.com/html-kit/services/favicon/)



+++++纯CSS制作的下拉菜单++++++
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>纯CSS下拉菜单</title>
</head>
<style type="text/css">
#menu_yhm ul{margin:0px; padding:0px;}
#menu_yhm ul li{float:left; display:inline; font:12px 宋体; height:30px; width:100px; list-style-type:none;}
#menu_yhm ul li a{color:#FFF; text-decoration:none; line-height:29px; width:91px; margin:0px; padding:0px 0px 0px 8px; display:block; border-right:solid 1px #ccc; border-bottom:solid 1px #ccc; background:#808080;}
#menu_yhm ul li ul li{height:25px;}
#menu_yhm ul li ul li a{background:#666; line-height:24px;}
#menu_yhm ul li a:hover{background:#666;}
#menu_yhm ul li ul{visibility:hidden;}
#menu_yhm ul li:hover ul{visibility:visible;}
#menu_yhm ul li ul li a:hover{background:#333;}
</style>
<body>
<div id="menu_yhm">
      <ul>
        <li><a href="#">菜单一</a></li>
        <li><a href="#">菜单二</a>
            <ul>
                <li><a href="#">子菜单一</a></li>
                <li><a href="#">子菜单二</a></li>
                <li><a href="#">子菜单三</a></li>
            </ul>
        </li>
        <li><a href="#">菜单三</a></li>
        <li><a href="#">菜单四</a>
            <ul>
                <li><a href="#">子菜单一</a></li>
                <li><a href="#">子菜单二</a></li>
                <li><a href="#">子菜单三</a></li>
            </ul>
        </li>
        <li><a href="#">菜单五</a></li>
    </ul>
</div>
</body>
</html>


++++++使用CSS将图片转换成黑白(灰色、置灰)++++++
<!doctype html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>无标题文档</title>
<style type="text/css">
a img{ -webkit-filter: grayscale(100%);
    -moz-filter: grayscale(100%);
    -ms-filter: grayscale(100%);
    -o-filter: grayscale(100%);
    filter: grayscale(100%);
	filter:gray;}
a:hover img{-webkit-filter: grayscale(0);
    -moz-filter: grayscale(0);
    -ms-filter: grayscale(0);
    -o-filter: grayscale(0);
    filter: grayscale(0);
    filter:;}
</style>
</head>
<body>
<a href="#"><img src="logo.png" border="0"></a>
<a href="#"><img src="test.jpg" border="0"></a>
</body>
</html>


++++HTML5+++++
HTML5 有哪些新增的表单元素？
datalist
datetime
output
keygen
date
month
week
time
color
number
range
email
url
HTML5 废弃了哪些 HTML4 标签？
frame
frameset
noframe
applet
big
center
basefront
HTML5 标准提供了哪些新的 API？
Media API
Text Track API
Application Cache API
User Interaction
Data Transfer API
Command API
Constraint Validation API
History API

+++++js正则表达式匹配靓号++++++
匹配6位顺增
regex.Pattern = "(?:0(?=1)|1(?=2)|2(?=3)|3(?=4)|4(?=5)|5(?=6)|6(?=7)|7(?=8)|8(?=9)){5}\d"
匹配6位顺降
regex.Pattern = "(?:9(?=8)|8(?=7)|7(?=6)|6(?=5)|5(?=4)|4(?=3)|3(?=2)|2(?=1)|1(?=0)){5}\d"
匹配6位顺增或顺降
regex.Pattern = "(?:(?:0(?=1)|1(?=2)|2(?=3)|3(?=4)|4(?=5)|5(?=6)|6(?=7)|7(?=8)|8(?=9)){5}|(?:9(?=8)|8(?=7)|7(?=6)|6(?=5)|5(?=4)|4(?=3)|3(?=2)|2(?=1)|1(?=0)){5})\d"
匹配4-9位连续的数字
(?:(?:0(?=1)|1(?=2)|2(?=3)|3(?=4)|4(?=5)|5(?=6)|6(?=7)|7(?=8)|8(?=9)){3,}|(?:9(?=8)|8(?=7)|7(?=6)|6(?=5)|5(?=4)|4(?=3)|3(?=2)|2(?=1)|1(?=0)){3,})\d
匹配3位以上的重复数字
([\d])\1{2,}
匹配日期类型的数字
(19|20)[\d]{2}(1[0-2]|0?[1-9])(31|2[0-9]|1[0-9]|0?[0-9])
手机号码类
(13[0-9]|15[0-9]|18[0-9])([\d]{2,4}){2}
匹配33111类型的
([\d])\1{1,}([\d])\2{2,}
匹配5331533类型的
(([\d]){1,}([\d]){1,})\1{1,}
匹配22334,123355类型的
([\d])\1{1,}([\d])\2{1,}



+++++js如何设置一个全站都能使用的cookie，常用来记录用户名++++++
<html>
<head>
<script type="text/javascript">
function getCookie(c_name)
{
if (document.cookie.length>0)
  {
  c_start=document.cookie.indexOf(c_name + "=")
  if (c_start!=-1)
    { 
    c_start=c_start + c_name.length+1 
    c_end=document.cookie.indexOf(";",c_start)
    if (c_end==-1) c_end=document.cookie.length
    return unescape(document.cookie.substring(c_start,c_end))
    } 
  }
return ""
}

function setCookie(c_name,value,expiredays)
{
var exdate=new Date()
exdate.setDate(exdate.getDate()+expiredays)
document.cookie=c_name+ "=" +escape(value)+
((expiredays==null) ? "" : ";expires="+exdate.toGMTString())
}

function checkCookie()
{
username=getCookie('username')
if (username!=null && username!="")
  {alert('Welcome again '+username+'!')}
else 
  {
  username=prompt('Please enter your name:',"")
  if (username!=null && username!="")
    {
    setCookie('username',username,365)
    }
  }
}
</script>
</head>

<body onLoad="checkCookie()">
</body>
</html>


+++++JS标题定时闪动+++++++
varblinkTitle=function(option){
    vartitle=null;
    varnewTitle=null;
    varhandle=null;
    varstate=false;
    varinterval=null;
 
    if(option){
        newTitle=option.newTitle?option.newTitle:'';
        title=option.title?option.title:document.title;
        interval=option.interval?option.interval:600;
    }else{
        newTitle='';
        title=document.title;
        interval=600;
    }
 
    functionstart(){
        if(state===true){
            document.title=newTitle;
            state=false;
        }else{
            document.title=title;
            state=true;
        }
        handle=setTimeout(arguments.callee,interval);
    }
 
    functionstop(option){
        clearTimeout(handle);
        setTimeout(function(){
            console.log(option)
            if(typeofoption==="string"){
                document.title=option;
            }else{
                document.title=title;
            }
        },200);
    }
 
    return{
        start:start,
        stop:stop
    }
}();
 
/**
 * 开始标题闪烁
 */
blinkTitle.start();
//可以传入几个可选的参数
blinkTitle.start({
    title:'设置新的文档默认标题内容',
    newTitle:'设置新的闪动标题内容',
    interval:1000
});
 
/**
 * 停止标题闪烁
 */
blinkTitle.stop();
//如果你想让页面标题为一个新的内容的话，可以传入一个字符串
blinkTitle.stop('新的标题内容');



+++++IE兼容问题回顾++++++
1.制作页面的时候因为是从标准到非标,从高到低的过程,所以需要在做的时候思考到底那些低版本不合适,简单的来说有各种比较潮的属性(对于古董浏览器来说),或者是常见的透明度(包含图片),以及display属性支持度等。
2.始终记得给你的元素一个触发hasLayout的属性,对于兼容的时候,可以省很多事情。
3.由于两种盒模型的计算差异在边框,所以在标准浏览器下写死的高度或者宽度需要在给IE做处理的时候使用备用高度以及宽度,所谓备用宽度和高度就是比原始的标准宽高小那么一点点。
4.浮动这个事情,其实蛮好解决,只要你不滥用浮动去布局,记得随手清理和闭合包含浮动元素的父元素,那么兼容基本不用考虑这个问题,跨浏览器清除浮动之前的总结中有写.
5.关于透明度,如果很细节的,建议使用带背景不透明的图片做替换, 如果非很细节的可以使用gif将就一下.这里涉及到sprite,需要权衡一下.
6.关于图片缩放使用,不建议使用,或者强制使用脚本以及缺省css规则限制最大尺寸为某数值,防止无限制状况的展示.
7.鉴于IE某些低版本的下载线程有限,所以尽量合并文件.
8.如果你的样式是基于脚本来做的,请让脚本尽早执行,或者分离成单独的样式,提前加载,免得页面抖动.
接着写一下脚本吧,脚本差异的话其实蛮大的,尤其是从ie6-mozilla-chrome最新,简直痛不欲生:
1.设计脚本的时候,请尽量不耦合.
2.ie低版本对于脚本执行不给力,所以请尽量高效的写代码,尽量缓存变量.
3.如果你允许使用框架的话,使用流行的框架可以省掉不少事件和对常用DOM元素操作的差异.
4.如果你的某些脚本按需加载,在处理过程中记得用in做功能性检测,防止报错,直接挂了.
5.调试阶段不要用异常捕获,这里包括使用on error.
6.记得使用json支持库,以及rest接口设置正确的content-type.
7.圆角什么的,如果要求不苛刻,就优雅降级吧,如果要求严格,且不想使用滤镜解决,可以考虑用遮罩图片来干.
8.多使用委托时间以及函数节流的思路来做,有效提高IE反映速度.
9.多使用lazyload思路以及事件解耦方法来进行DOM操作,而不是一条龙的从头执行到尾.
10.框架不能帮你解决所有的问题,所以请认真判断每一个重要的过程的变量的类型,防止GG思密达.
补充内容：
1.分隔符元素HR的设置可以用简单的text-align来搞定，而不需要浮动或者绝对定位等.
2.某些表示区域的色块，如果在IE6下走形，很大概率是没有设置font-size, 当然，建议把line-height也设置了，即使这货是块级？
3.使用正则表达式的时候,建议先打印出来,console也好,alert也罢,因为在标准浏览器和古董的IE6-8有一个DOM细节差异.见下面的代码说明。


++++++JS正则表达式验证身份证号码函数++++++
function isCardNo(card)
{
   // 身份证号码为15位或者18位，15位时全为数字，18位前17位为数字，最后一位是校验位，可能为数字或字符X
   var reg = /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/;
   if(reg.test(card) === false)
   {
       alert("身份证输入不合法");
       return  false;
   }
   return true;
}

++++++一个验证身份证号码的实例+++++
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>身份证号码js验证</title>
<script type="text/javascript">
//身份证号码验证主要方法开始
   function checkIdcard(idcard){
  var Errors=new Array("true","身份证号码位数不对!","身份证号码出生日期超出范围或含有非法字符!","身份证号码校验错误!","身份证号码中地区编码不正确!");
  var area={11:"北京",12:"天津",13:"河北",14:"山西",15:"内蒙古",21:"辽宁",22:"吉林",23:"黑龙江",31:"上海",32:"江苏",33:"浙江",34:"安徽",35:"福建",36:"江西",37:"山东",41:"河南",42:"湖北",43:"湖南",44:"广东",45:"广西",46:"海南",50:"重庆",51:"四川",52:"贵州",53:"云南",54:"西藏",61:"陕西",62:"甘肃",63:"青海",64:"宁夏",65:"新疆",71:"台湾",81:"香港",82:"澳门",91:"国外"}
  var idcard,Y,JYM;
  var S,M;
  var idcard_array = new Array();
  idcard_array = idcard.split("");
  if(idcard.length != 15 && idcard.length != 18) return Errors[1];
  if (idcard.substr(0,6) == "000000" || idcard.substr(0,6) == "111111" || idcard.substr(0,6) == "222222" || idcard.substr(0,6) == "333333" || idcard.substr(0,6) == "444444" || idcard.substr(0,6) == "555555" || idcard.substr(0,6) == "666666" || idcard.substr(0,6) == "777777" || idcard.substr(0,6) == "888888" || idcard.substr(0,6) == "999999")  return Errors[4];
  if (idcard.substr(0,6) == "123456" || idcard.substr(0,6) == "234567" || idcard.substr(0,6) == "345678" || idcard.substr(0,6) == "456789" || idcard.substr(0,6) == "567890" || idcard.substr(0,6) == "012345" || idcard.substr(0,6) == "543210" || idcard.substr(0,6) == "432109" || idcard.substr(0,6) == "321098" || idcard.substr(0,6) == "210987" || idcard.substr(0,6) == "109876" || idcard.substr(0,6) == "098765" || idcard.substr(0,6) == "987654" || idcard.substr(0,6) == "876543" || idcard.substr(0,6) == "765432")  return Errors[4];
  if (idcard.substr(0,6) == "121212" || idcard.substr(0,6) == "131313" || idcard.substr(0,6) == "141414" || idcard.substr(0,6) == "151515" || idcard.substr(0,6) == "161616" || idcard.substr(0,6) == "171717" || idcard.substr(0,6) == "181818" || idcard.substr(0,6) == "191919" || idcard.substr(0,6) == "101010")  return Errors[4];
  if (idcard.substr(0,6) == "212121" || idcard.substr(0,6) == "232323" || idcard.substr(0,6) == "242424" || idcard.substr(0,6) == "252525" || idcard.substr(0,6) == "262626" || idcard.substr(0,6) == "272727" || idcard.substr(0,6) == "282828" || idcard.substr(0,6) == "292929" || idcard.substr(0,6) == "202020")  return Errors[4];
  if (idcard.substr(0,6) == "313131" || idcard.substr(0,6) == "323232" || idcard.substr(0,6) == "343434" || idcard.substr(0,6) == "353535" || idcard.substr(0,6) == "363636" || idcard.substr(0,6) == "373737" || idcard.substr(0,6) == "383838" || idcard.substr(0,6) == "393939" || idcard.substr(0,6) == "303030")  return Errors[4];
  if (idcard.substr(0,6) == "414141" || idcard.substr(0,6) == "424242" || idcard.substr(0,6) == "434343" || idcard.substr(0,6) == "454545" || idcard.substr(0,6) == "464646" || idcard.substr(0,6) == "474747" || idcard.substr(0,6) == "484848" || idcard.substr(0,6) == "494949" || idcard.substr(0,6) == "404040")  return Errors[4];
  if (idcard.substr(0,6) == "515151" || idcard.substr(0,6) == "525252" || idcard.substr(0,6) == "535353" || idcard.substr(0,6) == "545454" || idcard.substr(0,6) == "565656" || idcard.substr(0,6) == "575757" || idcard.substr(0,6) == "585858" || idcard.substr(0,6) == "595959" || idcard.substr(0,6) == "505050")  return Errors[4];
  if (idcard.substr(0,6) == "616161" || idcard.substr(0,6) == "626262" || idcard.substr(0,6) == "636363" || idcard.substr(0,6) == "646464" || idcard.substr(0,6) == "656565" || idcard.substr(0,6) == "676767" || idcard.substr(0,6) == "686868" || idcard.substr(0,6) == "696969" || idcard.substr(0,6) == "606060")  return Errors[4];
  if (idcard.substr(0,6) == "717171" || idcard.substr(0,6) == "727272" || idcard.substr(0,6) == "737373" || idcard.substr(0,6) == "747474" || idcard.substr(0,6) == "757575" || idcard.substr(0,6) == "767676" || idcard.substr(0,6) == "787878" || idcard.substr(0,6) == "797979" || idcard.substr(0,6) == "707070")  return Errors[4];
  if (idcard.substr(0,6) == "818181" || idcard.substr(0,6) == "828282" || idcard.substr(0,6) == "838383" || idcard.substr(0,6) == "848484" || idcard.substr(0,6) == "858585" || idcard.substr(0,6) == "868686" || idcard.substr(0,6) == "878787" || idcard.substr(0,6) == "898989" || idcard.substr(0,6) == "808080")  return Errors[4];
  if (idcard.substr(0,6) == "919191" || idcard.substr(0,6) == "929292" || idcard.substr(0,6) == "939393" || idcard.substr(0,6) == "949494" || idcard.substr(0,6) == "959595" || idcard.substr(0,6) == "969696" || idcard.substr(0,6) == "979797" || idcard.substr(0,6) == "989898" || idcard.substr(0,6) == "909090")  return Errors[4];

  if(area[parseInt(idcard.substr(0,2))]==null) return Errors[4];
  switch(idcard.length){
    case 15:
    if ((parseInt(idcard.substr(6,2))+1900) % 4 == 0 || ((parseInt(idcard.substr(6,2))+1900) % 100 == 0 && (parseInt(idcard.substr(6,2))+1900) % 4 == 0 )){
      ereg = /^[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}$/;//测试出生日期的合法性
    }
    else{
      ereg = /^[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}$/;//测试出生日期的合法性
    }
    if(ereg.test(idcard))
      return Errors[0];
    else
      return Errors[2];
    break;
    case 18:
      if ( parseInt(idcard.substr(6,4)) % 4 == 0 || (parseInt(idcard.substr(6,4)) % 100 == 0 && parseInt(idcard.substr(6,4))%4 == 0 )){
        ereg = /^[1-9][0-9]{5}19[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}[0-9Xx]$/;//闰年出生日期的合法性正则表达式
      }
      else{
        ereg = /^[1-9][0-9]{5}19[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}[0-9Xx]$/;//平年出生日期的合法性正则表达式
      }
      if(ereg.test(idcard)){
        S = (parseInt(idcard_array[0]) + parseInt(idcard_array[10])) * 7 + (parseInt(idcard_array[1]) + parseInt(idcard_array[11])) * 9 + (parseInt(idcard_array[2]) + parseInt(idcard_array[12])) * 10 + (parseInt(idcard_array[3]) + parseInt(idcard_array[13])) * 5 + (parseInt(idcard_array[4]) + parseInt(idcard_array[14])) * 8 + (parseInt(idcard_array[5]) + parseInt(idcard_array[15])) * 4 + (parseInt(idcard_array[6]) + parseInt(idcard_array[16])) * 2 + parseInt(idcard_array[7]) * 1 + parseInt(idcard_array[8]) * 6 + parseInt(idcard_array[9]) * 3 ;
        Y = S % 11;
        M = "F";
        JYM = "10X98765432";
        M = JYM.substr(Y,1);
        if(M == idcard_array[17])
          return Errors[0];
        else
          return Errors[3];
      }
      else
        return Errors[2];
      break;
  default:
    return Errors[1];
    break;
  }
}
//主要方法结束
  function v_cert_number(theForm){    
      var check_result = checkIdcard(theForm.cardid.value);
      if (check_result != "true"){
        document.getElementById("cert_number_div").style.color="#ff0000";
        document.getElementById("cert_number_div").innerHTML ="&nbsp;"+check_result;
        return false;  
      }    
      document.getElementById("cert_number_div").innerHTML ="身份证号码正确，需要人工验证身份号和姓名是否相符！";
  }  
////
</script>
<script>
    function validateform()
    {    
      var check_result = checkIdcard(reg.cardid.value);
      if (check_result != "true"){
          window.alert (check_result)
          reg.cardid.focus()
          return false;
         }
     }
</script> 
</head>

<body>
<form action="real.php?type=upinfo" method="post"  name="reg" onSubmit="return validateform();"> 
<INPUT onblur=javascript:v_cert_number(document.reg) name=cardid>
<DIV class=f1 id=cert_number_div align=left>请如实填写身份证号，作为实名认证的主要依据，如果末位字符是X，则必须输入大写X</DIV>
</form>
</body>
</html>


++++++JS屏蔽Alt＋方向键，F5刷新键，退格键，还有CTR+N，shift＋F10，F11等键++++++++
<script>  
  function   document.onkeydown()   {           
      if   ((window.event.altKey)&&     
              ((window.event.keyCode==37)||       //屏蔽   Alt+   方向键   ←     
                (window.event.keyCode==39))){     //屏蔽   Alt+   方向键   →     
            alert("软件不支持你使用ALT+方向键前进或后退！");     
            event.returnValue=false;     
            }     
      if   ((event.keyCode==8)||                         //屏蔽退格删除键     
              (event.keyCode==116)){                     //屏蔽   F5   刷新键     
            event.keyCode=0;     
            event.returnValue=false;     
            }     
      if   ((event.ctrlKey)&&(event.keyCode==78)){       //屏蔽   Ctrl+n     
            event.returnValue=false;     
            }     
      if   ((event.shiftKey)&&(event.keyCode==121)){   //屏蔽   shift+F10     
            event.returnValue=false;     
            }     
      if   (event.keyCode==122){   //屏蔽   F11     
            event.returnValue=false;     
            }     
      }
  function   document.onfocus(){
      if   ((window.event.altKey)&&     
              ((window.event.keyCode==37)||       //屏蔽   Alt+   方向键   ←     
                (window.event.keyCode==39))){     //屏蔽   Alt+   方向键   →     
            alert("软件不支持你使用ALT+方向键前进或后退！");     
            event.returnValue=false;     
            }     
      if   ((event.keyCode==8)||                         //屏蔽退格删除键     
              (event.keyCode==116)){                     //屏蔽   F5   刷新键     
            event.keyCode=0;     
            event.returnValue=false;     
            }     
      if   ((event.ctrlKey)&&(event.keyCode==78)){       //屏蔽   Ctrl+n     
            event.returnValue=false;     
            }     
      if   ((event.shiftKey)&&(event.keyCode==121)){   //屏蔽   shift+F10     
            event.returnValue=false;     
            }     
      if   (event.keyCode==122){   //屏蔽   F11     
            event.returnValue=false;     
            }     
      }
  </script>   



++++完全去除页面滚动条的方法实现网站全屏+++++
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<script language="javascript">
  <!--
function fullscreen(){ 
window.open("/index.htm","","scrollbars=0,toolbar=0,location=0,fullscreen=1,directories=0,status=0,menubar=0,resizable=0");
}
  // -->
</script>
</head>
<body>
<h3 align="center"><a href="j avascript:fullscreen()">打开</a></h3>
</body>
</html>


++++++提交表单后,点回退/返回,依然会保留表单数据++++++++
<HTML>  
<HEAD>  
<META  NAME="save"  CONTENT="history">  
<STYLE>  
    .saveHistory  {behavior:url(#default#savehistory);}  
</STYLE>  
</HEAD>  
<BODY>  
<FORM  name=a>  
<INPUT  class=saveHistory  type=text  id=oPersistInput>  
<input type="submit" value="提交" />
</FORM>  
</BODY>  
</HTML>  


+++++JS中F5刷新事件++++++
<script language="javascript">
 g_blnCheckUnload = true;
 function RunOnBeforeUnload() {
    if (g_blnCheckUnload) {window.event.returnValue = 'You will lose any unsaved content';   
    }  
 }
</script>
<body  onbeforeunload="RunOnBeforeUnload()">
</body>


++++++JS关闭页面提示++++++
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<title>Confirm Before Leave</title>
<script language="javascript" type="text/javascript">

<!--
var pb_strConfirmCloseMessage;
var pb_blnCloseWindow = false;
pb_strConfirmCloseMessage ="您真的要离开本页吗?";
function ConfirmClose() {
    window.event.returnValue = pb_strConfirmCloseMessage;
    pb_blnCloseWindow = true;
}
function ShowConfirmClose(blnValue) {
    if(blnValue) {
        document.body.onbeforeunload = ConfirmClose;
    } else {
        document.body.onbeforeunload = null;
    }
}
//--></script>
</head>
<body onload="ShowConfirmClose(true);">
<input type=button value="提示" onclick="ShowConfirmClose(true);">
<input type=button value="不提示" onclick="ShowConfirmClose(false);">
<input type=button value="测试刷新" onclick="window.location.reload();">
</body>
</html>


+++js删除前确认+++++++
<a href="delete.php?ID=1" onclick="return confirm('确定删除磁记录？');">删除</a>


+++++js中onchange()事件动态改变显示内容+++++
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>DIV-3</title>
<SCRIPT language=JavaScript>
function Change(id)
{
 div1.style.display==''; 
}
function a(x){
for(var i=1;i<5;i++){
 if(i==x)document.getElementById("div"+i).style.visibility="visible";
 else document.getElementById("div"+i).style.visibility="hidden";
}
}
</SCRIPT>
</head>
<body>
<div id="div1">此处显示 id "div1" 的内容</div><br>
<div id="div2">此处显示 id "div2" 的内容</div><br>
<div id="div3">此处显示 id "div3" 的内容</div><br>
<div id="div4">此处显示 id "div4" 的内容</div><br>
<select onChange="a(this.selectedIndex+1)">
<option value="1">1</option>
<option value="2">2</option>
<option value="3">3</option>
<option value="4">4</option>
</select>
</body>


++++禁止浏览器从本地计算机的缓存中访问页面内容,这样设定，访问者将无法脱机浏览+++++++
<META HTTP-EQUIV="PRAGMA" CONTENT="NO-CACHE"> 


+++++禁止网页查看源代码，保护源码++++++
<html>
<body>
<script Language=javascript>  
function Click(){ 
alert('版权所有(C)2099 Jason'); 
window.event.returnValue=false; 
} 
document.oncontextmenu=Click; 
</script> 
</body>
</html>


+++++滚动条设计改变颜色等等+++++++
//在chrome下测试无效
<html>
<head> 
 <style type="text/css">
body 
{
 scrollbar-face-color: #b5daff;
 scrollbar-highlight-color: #ffffff;
 scrollbar-shadow-color: #000000;
 scrollbar-arrow-color: #0000ff;
 scrollbar-base-color: #6699ff;
 scrollbar-dark-shadow-color: #6699ff;
}
</style>
</head> 
<body> 
<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
</body> 
</html>

++++点击关闭浏览器窗口+++++
<a href="javascript:window.close()"><br> 
关闭窗口</a> 

++++JS监听事件++++
onUnload(窗口关闭) 
onload(窗口启动) 
onfocus(窗口获得焦点) 
onblur(窗口失去焦点) 
onerror(窗口中出现错误)  



+++++js几秒后再获取验证码按钮+++++
 <HTML>
 <body>  
<input type="button" id="getCode" value="Test" />  
<script type="text/javascript">  
function $ (o){  
  return document.getElementById(o);  
}  
var T = 6;  
var handle = null;  
$('getCode').onclick = countDown;  
  
function countDown() {  
    if(T == 0){  
        clearTimeout(handle);  
  handle = null;  
        $('getCode').value = '重新获取';  
    }  
    else{  
        $('getCode').value = (T + '秒后可重新获取');  
        T --;  
  handle = handle ? handle : setInterval(arguments.callee, 1000);  
    }  
}  
</script>  
</body>
</HTML>


++++几条经典的css技巧++++++
使用 line-height 垂直居中
line-height:24px;
使用固定宽度的容器并且需要一行垂直居中时，使用 line-height 即可（高度与父层容器一致），更多的垂直居中总结可以 看这里 。

清除容器浮动
#main {
    overflow:hidden;
}
期前也提到过这样的问题 ，更多信息可以看 这里 。

不让链接折行
a {
    white-space:nowrap;
}
上面的设定就能避免链接折行，不过个人建议长链接会有相应的这行（有关换行方面的讨论， 参看圆心的记录 ）。

始终让 Firefox 显示滚动条
html {
    overflow:-moz-scrollbars-vertical;
}
更多的 Mozilla/Firefox 私有 CSS 属性可以 参考这里 。需跨浏览器的支持，也可以使用

body, html {
    min-height:101%;
}
使块元素水平居中
margin:0 auto;
其实就是
margin-left: auto;
margin-right: auto;
这个技巧基本上所有的 CSS 教科书都会有说明，别忘记给它加上个宽度。Exploer 下也可以使用
body{
    text-align: center;
}
然后定义内层容器

text-align: left;
恢复。

隐藏 Exploer textarea 的滚动条
textarea {
    overflow:auto;
}
Exploer 默认情况下 textarea 会有垂直滚动条（不要问我为什么）。

设置打印分页
h2 {
    page-break-before:always;
}
page-break-before 属性能设置打印网页时的分页。

删除链接上的虚线框
a:active, a:focus {
    outline:none;
}
Firefox 默认会在链接获得焦点（或者点击时）加上条虚线框，使用上面的属性可以删除。


HTML5将oninput事件标准化了，该事件用来检测用户的输入状态。当然，通过使用onkeydown或者onkeyup作为代替也是可以的。
对所有ie使用onpropertychange，其他浏览器用oninput：
var ie = !!window.ActiveXObject;  
if(ie){  
    object.onpropertychange = fn;  
}else{  
    object.addEventListener("input",fn,false);  
}  

++++正则验证++++++
中文：/^[\u4E00-\u9FA5]+$/
手机号码：/^(86)?0?1\d{10}$/
EMAIL：
/^[\w-]+[\w-.]?@[\w-]+\.{1}[A-Za-z]{2,5}$/
密码（安全级别中）：
/^(\d+[A-Za-z]\w*|[A-Za-z]+\d\w*)$/
密码（安全级别高）：
/^(\d+[a-zA-Z~!@#$%^&(){}][\w~!@#$%^&(){}]*|[a-zA-Z~!@#$%^&(){}]+\d[\w~!@#$%^&(){}]*)$/


+++++兼容各大浏览器的设为首页加入收藏代码+++++
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> 
<html xmlns="http://www.w3.org/1999/xhtml"> 
<head> 
<meta http-equiv="Content-Type" content="text/html; charset=gb2312" /> 
<title>兼容FF 加入收藏夹和设为首页</title> 
<SCRIPT LANGUAGE="JavaScript"> 
<!-- 
function AddFavorite(sURL, sTitle) 
{ 
    try 
    { 
        window.external.addFavorite(sURL, sTitle); 
    } 
    catch (e) 
    { 
        try 
        { 
            window.sidebar.addPanel(sTitle, sURL, ""); 
        } 
        catch (e) 
        { 
            alert("加入收藏失败，请使用Ctrl+D进行添加"); 
        } 
    } 
} 
function SetHome(obj,vrl){ 
        try{ 
                obj.style.behavior='url(#default#homepage)';obj.setHomePage(vrl); 
        } 
        catch(e){ 
                if(window.netscape) { 
                        try { 
                                netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect"); 
                        } 
                        catch (e) { 
                                alert("此操作被浏览器拒绝！\n请在浏览器地址栏输入“about:config”并回车\n然后将 [signed.applets.codebase_principal_support]的值设置为'true',双击即可。"); 
                        } 
                        var prefs = Components.classes['@mozilla.org/preferences-service;1'].getService(Components.interfaces.nsIPrefBranch); 
                        prefs.setCharPref('browser.startup.homepage',vrl); 
                 } 
        } 
} 
//--> 
</SCRIPT> 
</head> 
<body> 
<a onclick="AddFavorite(window.location,document.title)" style="cursor:pointer;">加入收藏</a> 
<a onclick="SetHome(this,window.location)">设为首页</a> 
</body> 
</html>


++++JS自动伸缩广告代码++++++
自动伸缩广告代码，加载完毕后动态显示然后停顿n秒后动态收缩.
<html>
<head>
<title>test</title>
<script type="text/javascript">
 var intervalId = null;
 function slideAd(id,nStayTime,sState,nMaxHth,nMinHth)
 {
  this.stayTime=nStayTime*1000 || 3000;
  this.maxHeigth=nMaxHth || 97;
  this.minHeigth=nMinHth || 2.5;
  this.state=sState || "down" ;
  var obj = document.getElementById(id);
  if(intervalId != null)
  {
   window.clearInterval(intervalId);
  }
  function openBox()
  {
   var h = obj.offsetHeight;
   obj.style.height = ((this.state == "down") ? (h + 2) : (h - 2))+"px";
   if(obj.offsetHeight>this.maxHeigth)
   {
    window.clearInterval(intervalId);
    intervalId=window.setInterval(closeBox,this.stayTime);
   }
   if (obj.offsetHeight<this.minHeigth)
   {
    window.clearInterval(intervalId);
    obj.style.display="none";
   }
  }
  function closeBox()
  {
   slideAd(id,this.stayTime,"up",nMaxHth,nMinHth);
  }

  intervalId = window.setInterval(openBox,30);
 }

 function showAd()
 {
  <!--
  slideAd('MyMoveAd',6);    //div的id和时间（秒）
  -->
 }
</script>
</head>
<body onload="showAd();">
<center>
 <div id="MyMoveAd" style="background:#ff0000;height:12px;overflow:hidden;">
      <a href="http://www.sjolzy.cn/" target="_blank"><img src="http://mimg.126.net/ggimg/all/hotel_bbx780X100.jpg" border="0" /></a>
 </div>
</center>
</body>
</html>


++++jquery常用方法++++++
jQuery 常见操作实现方式
$("标签名") //取html元素 document.getElementsByTagName("")
$("#ID") //取单个控件document.getElementById("")
$("div #ID") //取某个控件中 控件
$("#ID #ID") // 通过控件ID取其中的控件
$("标签.class样式名") //通过class来取控件
$("#ID").val(); //取value值
$("#ID").val(""); //赋值
$("#ID").hide(); //隐藏
$("#ID").show(); //显示
$("#ID").text(); //相当于取innerHTML
$("#ID").text(""); //相当于innerHTML=""
$("#ID").css("属性","值") //添加CSS样式
$("form#表单id").find("#所找控件id").end() //遍历表单
$("#ID").load("*.html") //载入一个文件
例如：
$("form#frmMain").find("#ne").css("border", "1px solid #0f0").end() // end()返回表单
.find("#chenes").css("border-top","3px dotted #00f").end()
$.ajax({ url: "Result.aspx", //数据请求页面的url
type:"get", //数据传递方式(get或post)
dataType:"html", //期待数据返回的数据格式(例如 "xml", "html", "script",或 "json")
data: "chen=h", //传递数据的参数字符串，只适合get方式
timeout:3000, //设置时间延迟请求的时间
success:function(msg)//当请求成功时触发函数
{
$("#stats").text(msg);
},
error:function(msg) //当请求失败时触发的函数
{
$("#stats").text(msg);
}
});
$(document).ready(function(){});
$("#description").mouseover(function(){});
//ajax方法
$.get( "Result.aspx", //数据请求页面的url
{ chen: "测试",age:"25"}, //传递数据的参数字符串
function(data){ alert("Data Loaded: " + data); } //触发后的函数
);
});
});
//取得下拉选单的选取值
$(#testSelect option:selected').text(); //取文本值
或$("#testSelect").find('option:selected').text();
或$("#testSelect").val();
------
jQuery中常用的函数方法总结
事件处理
ready(fn)
代码：
$(document).ready(function(){
  // Your code here...
})；

作用：它可以极大地提高web应用程序的响应速度。通过使用这个方法，可以在DOM载入就绪能够读取并操纵时立即调用你所绑定的函数，而99.99%的JavaScript函数都需要在那一刻执行。
bind(type,[data],fn)
代码：
$("p").bind("click", function(){
  alert( $(this).text() );
});
作用：为每一个匹配元素的特定事件（像click）绑定一个事件处理器函数。起到事件监听的作用。
toggle(fn,fn)
代码：
$("td").toggle(
  function () {
    $(this).addClass("selected");
  },
  function () {
    $(this).removeClass("selected");
  }
);
作用：每次点击时切换要调用的函数。如果点击了一个匹配的元素，则触发指定的第一个函数，当再次点击同一元素时，则触发指定的第二个函数。挺有趣的一个函数，在动态实现某些功能的时候可能会用到。
(像click(),focus(),keydown()这样的事件这里就不提了，那些都是开发中比较常用到的。)
外观效果
addClass(class)和removeClass(class)
代码：
$(".stripe tr").mouseover(function(){ 
               $(this).addClass("over");}).mouseout(function(){
               $(this).removeClass("over");})
});
也可以写成：
$(".stripe tr").mouseover(function() { $(this).addClass("over") });
$(".stripe tr").mouseout(function() { $(this).removeClass("over") });
作用：为指定的元素添加或移除样式，从而实现动态的样式效果，上面的实例中实现鼠标移动双色表格的代码。
css(name,value)
代码：
$("p").css("color","red");
作用：很简单，就是在匹配的元素中，设置一个样式属性的值。这个个人感觉和上面的addClass(class)有点类似。
slide(),hide(),fadeIn(), fadeout(), slideUp() ,slideDown()
代码：
$("#btnShow").bind("click",function(event){ $("#divMsg").show() });
$("#btnHide").bind("click",function(evnet){ $("#divMsg").hide() });
作用：jQuery中提供的比较常用的几个动态效果的函数。还可以添加参数：show(speed,[callback])以优雅的动画显示所有匹配的元素，并在显示完成后可选地触发一个回调函数。
animate(params[,duration[,easing[,callback]]])
作用：制作动画效果用到的函数，功能非常的强大，可以连续使用此函数。
查找筛选
map(callback)
HTML 代码:
<p><b>Values: </b></p>
<form>
  <input type="text" name="name" value="John"/>
  <input type="text" name="password" value="password"/>
  <input type="text" name="url" value="http://www.sjolzy.cn>
</form>
jQuery 代码:
$("p").append( $("input").map(function(){
  return $(this).val();
}).get().join(", ") );
结果:
[ <p>John, password, http://www.sjolzy.cn/</p> ]
作用：将一组元素转换成其他数组（不论是否是元素数组）你可以用这个函数来建立一个列表，不论是值、属性还是CSS样式，或者其他特别形式。这都可以用'$.map()'来方便的建立。
find(expr)
HTML 代码:
<p><span>Hello</span>, how are you?</p>
jQuery 代码:
$("p").find("span")
结果:
[ <span>Hello</span> ]
作用：搜索所有与指定表达式匹配的元素。这个函数是找出正在处理的元素的后代元素的好方法。
文档处理
attr(key,value)
HTML 代码:
<img/><img/>
jQuery 代码:
$("img").attr("src","test.jpg");
作用：取得或设置匹配元素的属性值。通过这个方法可以方便地从第一个匹配元素中获取一个属性的值。如果元素没有相应属性，则返回 undefined 。在控制HTML标记上是必备的工具。
html()/html(val)
HTML 代码:
<div><p>Hello</p></div>
jQuery 代码:
$("div").html();
结果:
<p>Hello</p>
作用：取得或设置匹配元素的html内容，同类型的方法还有text()和val()。前者是取得所有匹配元素的内容。，后者是获得匹配元素的当前值。三者有相似的地方常用在内容的操作上。
wrap(html)
HTML 代码:
<p>Test Paragraph.</p>
jQuery 代码:
$("p").wrap("<div class='wrap'></div>");
结果:
<div class="wrap"><p>Test Paragraph.</p></div> 
作用：把所有匹配的元素用其他元素的结构化标记包裹起来。
这种包装对于在文档中插入额外的结构化标记最有用，而且它不会破坏原始文档的语义品质。 可以灵活的修改我们的DOM。
empty()
HTML 代码:
<p>Hello, <span>Person</span> <a href="#">and person</a></p>
jQuery 代码:
$("p").empty();
结果:
<p></p>
作用：删除匹配的元素集合中所有的子节点。
Ajax处理
load(url,[data],[callback])
url (String) : 待装入 HTML 网页网址。
data (Map) : (可选) 发送至服务器的 key/value 数据。
callback (Callback) : (可选) 载入成功时回调函数。
代码：
$("#feeds").load("feeds.aspx", {limit: 25}, function(){
   alert("The last 25 entries in the feed have been loaded");
 });
作用：载入远程 HTML 文件代码并插入至 DOM 中。这也是Jquery操作Ajax最常用最有效的方法。
serialize()
HTML 代码:
<p id="results"><b>Results: </b> </p>
<form>
  <select name="single">
    <option>Single</option>
    <option>Single2</option>
  </select>
  <select name="multiple" multiple="multiple">
    <option selected="selected">Multiple</option>
    <option>Multiple2</option>
    <option selected="selected">Multiple3</option>
  </select><br/>
  <input type="checkbox" name="check" value="check1"/> check1
  <input type="checkbox" name="check" value="check2"
checked="checked"/> check2
  <input type="radio" name="radio" value="radio1"
checked="checked"/> radio1
  <input type="radio" name="radio" value="radio2"/> radio2
</form>
jQuery 代码:
$("#results").append( "<tt>" + $("form").serialize() + "</tt>" );
作用：序列化表格内容为字符串。用于 Ajax 请求。
工具
jQuery.each(obj,callback)
代码：
$.each( [0,1,2], function(i, n){
  alert( "Item #" + i + ": " + n );
});//遍历数组
$.each( { name: "John", lang: "JS" }, function(i, n){
  alert( "Name: " + i + ", Value: " + n );//遍历对象
});
作用：通用例遍方法，可用于例遍对象和数组。
jQuery.makeArray(obj)
HTML 代码:
<div>First</div><div>Second</div><div>Third</div><div>Fourth</div>
jQuery 代码:
var arr = jQuery.makeArray(document.getElementsByTagName("div"));
结果:
Fourth
Third
Second
First
作用：将类数组对象转换为数组对象。使我们可以在数组和对象之间灵活的转换。
jQuery.trim(str)
作用：这个大家应该很熟悉，就是去掉字符串起始和结尾的空格。

++++php百度logo+++++
<html>
<body>
<div id="m"><p id="lg"><img src="http://leo108-wordpress.stor.sinaapp.com/uploads/2012/03/8721_logo_1.gif" width="270" height="129" usemap="#mp"><map name="mp"><area shape="rect" coords="22,17,252,110"></map></p>
</div></body>
<script src="http://www.baidu.com/cache/dragon/js/dragon2012.js"></script>
</body>
</html>


+++jquery+++++
jquery在使用animate的时候，需要在被操作的属性上加上position='relative',不然动不了。
使用animate()时，必须用Camel标注法书写所有的属性名，比如，必须使用paddingLeft而不是padding-left，
使用marginRight而不是margin-right,等等。



++++PHP接收checkbox传递的值++++++
因为checkbox传递过来的大部分是数组元素，所以一般的传递单值在这里不适用。需要在前端将数据打包成数组
传递过来。
前端：
<form action="test.php" method="post">
1:<input type="checkbox" name='test[]' value="1" />
2:<input type="checkbox" name='test[]'  value="2" />
3:<input type="checkbox" name='test[]'  value="3" />
4:<input type="checkbox" name='test[]' value="4" />
<input type="submit" value="提交" />
PHP：
 $arr=$_POST['test'];
 var_dump($arr);
结果可能是:
array (size=4)
  0 => string '1' (length=1)
  1 => string '2' (length=1)
  2 => string '3' (length=1)
  3 => string '4' (length=1)



+++JS图片预加载++++
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="jquery-1.9.0.js"></script>
<style type="text/css">
body {
    background:#000;
}

#loader {
    margin: 0 auto;
    width: 300px;
    text-align: center;
    font-size: 25px;
    color: #efefef;
    margin-top: 300px;
}
#bar {
    border:1px solid #efefef;
    padding: 1px;
    margin-top: 10px;
}
#bar span {
    display: block;
    height: 2px;
    background: #efefef;
}
.main{
    text-align: center;
    font-size: 25px;
}
</style>

</head>
<body style="overflow:auto">
    <div id="loader">
        Loading <span id="load-text">0%</span>
        <div id="bar">
            <span>
            </span>
        </div>
    </div>

    <div class="main" style="display: none;">
        加载完显示的内容
    </div>
</body>

</html>
<script type="text/javascript">
var allImgSrcArr = new Array();

addImgSrc("./img/skill/1_48.png");
addImgSrc("./img/skill/1_50.png");
addImgSrc("./img/skill/1_60.png");
addImgSrc("./img/skill/1_120.png");
addImgSrc("./img/skill/1_250.png");
addImgSrc("./img/skill/1_500.png");
addImgSrc("./img/skill/1_1000.png");
addImgSrc("./img/skill/1_2000.png");


//创建图片路径数组
function addImgSrc(src){
    allImgSrcArr[allImgSrcArr.length] = src;
}





//=============================================================方法一


Array.prototype.remove = function(element) {//element为图片路径
    for (var i = 0; i < this.length; i++)
        if (this[i] == element) this.splice(i,1);//this为路径数组
};

function preload(images, progress) {
    var total = images.length;
    $(images).each(function(){
        var src = this;
        $('<img/>').attr('src', src).load(function() {
            images.remove(src);
            progress(total, total - images.length);
        });
    });
}

preload(allImgSrcArr, function(total, loaded){
    if (Math.ceil(100 * loaded / total) >= 100) {
        $('#load-text').html(100 + '%');
        $('#bar span').css('width', 100 + '%');
        $('#loader').fadeOut('slow', function() {
            $("body").attr("style","background: #efefef;");
            $('.main').fadeIn('slow');
        });
    } else {
        var percent = Math.ceil(100 * loaded / total);
        $('#load-text').html(percent + '%');
        $('#bar span').css('width', percent + '%');
    }
});




//=============================================================方法二
//对图片的加载不用JQuery，但图片数量大时容易内存溢出


/*
function LoadImageClass()
{
    var loadImageClass = this;
    this.Idx = 0;    //已经被加载的图片个数
    this.Num = 0;    //图片总数
    //下载图片
    this.LoadImages = function()
    {
        this.Num = allImgSrcArr.length;
        DownImg();
    }
    function DownImg()
    {
        var i=new Image();
        var f = true;
        i.onload= function()
        {
            if (f)
            {
                f = false
                loadImageClass.Idx++;
                if (loadImageClass.LoadIng) loadImageClass.LoadIng();
                if (loadImageClass.Idx<loadImageClass.Num) DownImg();
                else if(loadImageClass.CallBack) loadImageClass.CallBack(allImgSrcArr);
            }
        }
        i.src = allImgSrcArr[loadImageClass.Idx];
    }
}

var t=new LoadImageClass();

t.LoadIng = function() {
    var percent = Math.ceil(100 * t.Idx/t.Num);
    $('#load-text').html(percent + '%');
    $('#bar span').css('width', percent + '%');
};

t.CallBack = function(arr)
{
    $('#load-text').html(100 + '%');
    $('#bar span').css('width', 100 + '%');
    $('#loader').fadeOut('slow', function() {
        $("body").attr("style","background: #efefef;");
        $('.main').fadeIn('slow');
    });
}

t.LoadImages();

*/
</script>


+++css首字母变大下沉+++++
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<style type="text/css">
a{
    display:block;
    height:30px;
    width:100px;
    line-height:30px;
    float:left;
    background:url(picture/014304_btn_bg_hover.gif);
    color: #d84700;
}
a:first-letter { font-family: "microsoft yahei"; font-size: 40px; float: left; padding-right: 10px; line-height: 1; }
a:visited { color: #999; text-decoration: line-through; }

a:active { color: #F0F; }
a:link { color: #06F; text-decoration: none; }
a:hover {
    color: #F00;
    text-decoration: underline;
    background:url(picture/014304_btn_bg.gif);
}
</style>
</head>
<body>
<div id="menu">
    <p><a href="#">这是链接</a></p>
</div>
</body>
</html>


++++页面内搜索+++++
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/2000/REC-xhtml1-20000126/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="keywords" content="" />
<meta name="description" content="" />
<script type="text/javascript">
function encode(s){
  return s.replace(/&/g,"&").replace(/</g,"<").replace(/>/g,">").replace(/([\\\.\*\[\]\(\)\$\^])/g,"\\$1");
}
function decode(s){
  return s.replace(/\\([\\\.\*\[\]\(\)\$\^])/g,"$1").replace(/>/g,">").replace(/</g,"<").replace(/&/g,"&");
}
function highlight(s){
  if (s.length==0){
    alert('搜索关键词未填写！');
    return false;
  }
  s=encode(s);
  var obj=document.getElementsByTagName("body")[0];
  var t=obj.innerHTML.replace(/<span\s+class=.?highlight.?>([^<>]*)<\/span>/gi,"$1");
  obj.innerHTML=t;
  var cnt=loopSearch(s,obj);
  t=obj.innerHTML
  var r=/{searchHL}(({(?!\/searchHL})|[^{])*){\/searchHL}/g
  t=t.replace(r,"<span class='highlight'>$1</span>");
  obj.innerHTML=t;
  alert("搜索到关键词"+cnt+"处")
}
function loopSearch(s,obj){
  var cnt=0;
  if (obj.nodeType==3){
    cnt=replace(s,obj);
    return cnt;
  }
  for (var i=0,c;c=obj.childNodes[i];i++){
    if (!c.className||c.className!="highlight")
      cnt+=loopSearch(s,c);
  }
  return cnt;
}
function replace(s,dest){
  var r=new RegExp(s,"g");
  var tm=null;
  var t=dest.nodeValue;
  var cnt=0;
  if (tm=t.match(r)){
    cnt=tm.length;
    t=t.replace(r,"{searchHL}"+decode(s)+"{/searchHL}")
    dest.nodeValue=t;
  }
  return cnt;
}
</script>
<style type="text/css">
.highlight{background:red;font-weight:bold;color:white;}
</style>
</head>
<body>
<form onsubmit="highlight(this.s.value);return false;">
<p>
<input name="s" id="s" title=""/>
<input type="submit" value="搜索"/>
</p>
</form>
<div id="content">
<font face=Verdana>餐饮O2O<br />
中国餐饮市场是近3万亿的金矿，在“互联网改造传统产业”的大潮中，餐饮业首当其中。
我做过创投媒体，也在投资机构工作过，接触了数百种互联网改造传统餐饮的创新模式。但无论是BAT巨头、美团、点评，亦或是各个中小创业者，目前尚有发展的餐饮互联网模式，其实不外乎两大类：
第一种是团购，即通过优惠的模式把顾客流量大量吸引到餐厅，通过优惠的模式提高餐厅的上座率，从而让餐厅效率提高，营收增加。
第二种是外卖，即提高餐厅“翻台率”和服务能力，通过物流让周边顾客都可以吃到餐厅美食。
从这两个模式中我们可以看出，其实餐饮互联网化的核心真理只有一条——你是否提升餐厅效率，帮餐饮老板挣到更多钱？
无论模式再有噱头，产品再精致，不符合这条餐饮创业“金线”的最终都活不下去。因为餐饮业的特征就是B端（商家）多而散，利润不高，你的平台必须带来销售上的提升，才有足够多的餐厅愿意和你合作，然后你才具备服务C端（顾客）的资本。
粗听之下，“速位”的模式似乎有点多此一举？但实际情况是“速位”的模式对餐厅用户体验提升，以及效率提升都十分实用。
</font>
</div>
</body>
</html>


++HTML data-* 属性+++++
使用data-*属性来嵌入自定义数据：
data-* 属性用于存储页面或应用程序的私有自定义数据。
data-* 属性赋予我们在所有 HTML 元素上嵌入自定义 data 属性的能力。
存储的（自定义）数据能够被页面的 JavaScript 中利用，以创建更好的用户体验（不进行 Ajax 调用或服务器端数据库查询）。
data-* 属性包括两部分：
属性名不应该包含任何大写字母，并且在前缀 "data-" 之后必须有至少一个字符
属性值可以是任意字符串。


+++JS中NaN与NaN不相等+++++
btn.onclick=function(){
	
	var r= parseInt('agc');
	var f= parseInt('ddd');
	if(r == f){
		alert(true);
	}
	else{
		alert(false);
	}
结果为：false


+++JS最全最权威的判断数据类型方法对比+++++
/* 判断数据类型可能想到的方法：constructor、typeof、instanceof、Object.prototype.toString.call()*/
/***** 1、通过constructor属性  *****/
var myvar= new Array("a","b","c","d");
function A(){}myvar.constructor = A;
var c = myvar.constructor;alert(c); 
// function A(){}
//可见，通过constructor属性获取类型的方法很容易被修改，不应该用来判断类型。

/***** 2、通过typeof  *****/
/*     
typeof是一个操作符，而不是个函数。   
typeof的实际应用是用来检测一个对象是否已经定义或者是否已经赋值。        
如if(typeof a!="undefined"){}，而不要去使用if(a)因为如果a不存在（未声明）则会出错。  
typeof检测对象类型时一般只能返回如下几个结果： 
number,boolean,string,function,object,undefined。   
对于Array,Null,自定义对象 等使用typeof一律返回object，      
这正是typeof的局限性。
*/
var num = new Number(1);
var arr = [1,2,3];alert(typeof num); //object 而不是number
alert(typeof arr); //object 而不是Array
alert(typeof null);  // object

/***** 3、通过 instanceof  *****/
/* 用instanceof操作符来判断对象是否是某个类的实例。   
 如果obj instanceof Class返回true，那么Class的原型与obj原型链上的某个原型是同一个对象，  
 即obj要么由Class创建，要么由Class的子类创建。
*/
function t(){};
t.prototype  = Array.prototype;
//t.prototype  = [];
var x = new t();
alert(x instanceof t);//弹出true
alert(x instanceof Array);//弹出true
alert(x instanceof Object);//弹出true
/*
由此可知，通过 instanceof 判断数据类型也不可靠。

因为一个对象（此处x）的原型链可以很长，每个原型的类型可以不同。
另外在iframe内也会容易出错：即有个页面定义了一个数组a，页面又嵌套了一个IFrame，在Iframe里面通过 top.a instanceof Array， 是返回false的。
这个说明 父页面和内嵌iframe里的对象是不同的，不能混合在一起使用。
改成top.a instanceof top.Array 就会返回true
*/

/***** 4、通过 Object.prototype.toString.call()  *****/
/* 
 Object.prototype.toString.call() 作用是：
    1、获取对象的类名（对象类型）。    
    2、然后将[object、获取的类名]组合并返回。
   可应用于判断Array,Date,Function等类型的对象
*/
var num = new Number(1);
var arr = [1,2,3];
alert(Object.prototype.toString.call(num)); // [object Number]
alert(Object.prototype.toString.call(arr));// [object Array]

// 扩展示例：（apply等价于call）
window.utils = {   
  toString: Object.prototype.toString,  
  isObject: function (obj) {    
        return this.toString.apply(obj) === '[object Object]';   
  },   
  isFunction: function (obj) {      
  	return this.toString.apply(obj) === '[object Function]'; 
   },  
  isArray: function (obj) {      
  	return this.toString.apply(obj) === '[object Array]';   
 }
}
function A() { }
window.utils.isFunction(A);        //true
window.utils.isObject(new A());    //true
window.utils.isArray([]);          //true
/*
  jQuery等框架 就是用这个方法判断对象的类型的，因此可以把这种方法作为权威的判断方法。
但是，如果重写了Object.prototype.toString方法，这时候再用来判断数据类型可能就会出错，
所以，一般不要去重写Object.prototype.toString方法。
*/


++JS无穷大关键字Infinity+++++
<script>
mynumber=2;
while(mynumber != Infinity){
	mynumber=mynumber*mynumber;
	document.write(mynumber + "<br>");
}
</script>

++++JS中toFixed()与valueOf()方法+++++
toFixed()将Number四舍五入为指定小数位数的数字。
valueOf()访问指定变量的值。
<script>
var f=new String('fffffff');
document.write(f.valueOf());//输出：fffffff 注意调用方法！！！！

var g=new Number(34.666);
document.write(g.toFixed(2));//输出：34.67  注意调用方法！！！！
</script>


++++JS将字符串转换成数组++
一个split就可以：
var h="f g jj ff";
var arr=h.split(" ");
alert(Object.prototype.toString.call(arr));//已经转换成数组格式，一个split即可，神器也


+++++indexOf()++++++
//js中indexOf()定位关键字，有输出这个关键字的起始位置，没有输出-1
var r="hello world ,welcome to the universe";
var n =r.indexOf('to');
document.write(n);


++match()++++
//js中match匹配关键字，有的话输出这个关键字，没有输出null
var strr="gggnrtjherbejbdhrbhrs";
document.write(strr.match('be')+ "<br>");


++++toUpperCase()++++
//js中toUpperCase()变大写
var txxt="ff hfh fgg";
var hggh=txxt.toUpperCase();
document.write(hggh);

+++prototype+++
//js中prototype将对象的属性改变
function employee(name,job){
	this.name=name;
	this.job=job;
}
var bill=new employee('bill','engineer');
	employee.prototype.job=null;
	bill.job="teacher";
	document.write(bill.job);


+++replace++++
//js替换replace,注意格式
var a= "ggg erjddrfdhgrehgre";
document.write(a.replace(/er/,'ttttt'));


++++slice+++++
slice格式是：slice(起始位置，终止位置);
var str="1234"; 
alert(str.slice(2,4));  //输出是：34

+++++concat+++++
给数组添加元素
var strstr=[1,2,4,5];
document.write(strstr.concat(6,7));  //输出：1,2,4,5,6,7


++++js对时间格式进行操作++++++
将毫秒的截取成时间戳标准10位格式。
var year=new Date().getTime();
year=year.toString();  //将时间格式转换成字符串格式再进行操作
year=year.substr(0,10);
document.write(year);


++++js设定时间++++++
var x = new Date();
x.setFullYear(2100,1,14); //年份，月份+1，日
alert(x);


+++js中Math类中方法+++++++
使用Math类中的方法时Math必须首字母大写，不然出错。
var num= Math.random(1,6);
document.write(num);
var num2=Math.floor(num);
alert(num2);


++++js中正则的使用方法+++++
1,定义一个匹配规则，pattern=new RegExp('','');
2,使用test或者exec，pattern.test();
var strstr= "runrrrrrrttttttrrrrrrrvvvv"; 
var pattern = new RegExp('rt','g'); 
document.write(pattern.test(strstr));   //字符串strstr中存在rt,故返回true


++++prompt的用法+++++
var person= prompt("sometext","默认值");
if(person != null && person != " "){
	x = "Hello" + person + "! How are you today";
	alert(x);
}