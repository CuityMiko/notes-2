SQL笔试题
1.一道SQL语句面试题，关于group by表内容：
info 表
date     result
2005-05-09 win
2005-05-09 lose
2005-05-09 lose
2005-05-09 lose
2005-05-10 win
2005-05-10 lose
2005-05-10 lose

如果要生成下列结果, 该如何写sql语句?
   　    win lose

2005-05-09 2   2
2005-05-10 1   2

答案：
(1) select date, sum(case when result = "win" then 1 else 0 end) as "win", sum(case when result = "lose" then 1 else 0 end) as "lose" from info group by date;
(2) select a.date, a.result as win, b.result as lose
　　from
　　(select date, count(result) as result from info where result = "win" group by date) as a
　　join
　　(select date, count(result) as result from info where result = "lose" group by date) as b
　　on a.date = b.date;

 

2.表中有A B C三列,用SQL语句实现：当A列大于B列时选择A列否则选择B列，当B列大于C列时选择B列否则选择C列
select (case when a > b then a else b end), (case when b > c then b else c end) from table;


3.请取出tb_send表中日期(SendTime字段)为当天的所有记录? (SendTime字段为datetime型，包含日期与时间)
------------------------------------------
select * from tb where datediff(dd,SendTime,getdate())=0

 

4.有一张表，里面有3个字段：chinese，math，english。其中有一条记录chinese 70分，math 80分，english 58分，请用一条sql语句查询出所有记录并按以下条件显示出来（并写出您的思路）： 
   大于或等于80表示excellent，大于或等于60表示pass，小于60分表示fail。 
       显示格式： 以上面的chinese 70分，math 80分，english 58分
       chinese              math                english 
       pass                  excellent           fail

 

select (case when chinese >= 80 then "excellent" when chinese >= 60 then "pass" else "fail" end) as chinese,
　　(case when math >= 80 then "excellent" when math >= 60 then "pass" else "fail" end) as math,
　　(case when english >= 80 then "excellent" when english >= 60 then "pass" else "fail" end) as english
　　from grade;

 

5.请用一个sql语句得出结果
从table1,table2中取出如table3所列格式数据，注意提供的数据及结果不准确，只是作为一个格式向大家请教。
如使用存储过程也可以。

table1
月份mon 部门dep 业绩yj

-------------------------------
一月份      01      10
一月份      02      10
一月份      03      5
二月份      02      8
二月份      04      9
三月份      03      8

table2
部门dep      部门名称dname
--------------------------------
      01      国内业务一部
      02      国内业务二部
      03      国内业务三部
      04      国际业务部

 

table3 （result）
部门dep 一月份      二月份      三月份
--------------------------------------
      01      10        null      null
      02      10         8        null
      03      null       5        8
      04      null      null      9

-----------------------------------------
 

select t1.dep,
sum(case when mon = 1 then yj else 0 end) as jun,
sum(case when mon = 2 then yj else 0 end) as feb,
sum(case when mon = 3 then yj else 0 end) as mar
from
t1 right join t2 on t1.dep = t2.dep
group by t1.dep;



向mysql数据库某一字段中 追加 内容 ，请用concat()；实例：
$str='1';
$isok=mysql_query("update ks_link set link = concat( link ,'$str'  ) where id =2 ");
结果为：
-http://www.wdgj.com/111111111111111111111111111111111111111111111111111111111111-1438758949-


inner join(等值连接)  只返回两个表中联结字段相等的行；
left  join(左联接)     返回包括左表中的所有记录和右表中联结字段相等的记录；
right join(右联接)    返回包括右表中的所有记录和左表中联结字段相等的记录。


++++++利用HAVING语句过滤分组数据++++++
HAVING子句用于指定组或聚合的搜索条件，HAVING通常与GROUP BY 语句一起使用，如果SQL语句中不含GROUP BY子句，则HAVING的行为与WHERE子句一样.
e.x:SELECT name,math FROM tb_demo083 GROUP BY id HAVING math > '95'
由IN引入的关联子查询
e.x:SELECT * FROM tb_demo083 WHERE code IN(SELECT code FROM tb_demo083 WHERE code = '$_POST[text]')

++++++SQL中DateDiff函数++++++
返回两个日期之间的间隔。
SELECT datediff( month, '1999/07/19', '1999/08/23' )；
结果是：1；

+++++找出一定个数字符的所有字段+++++
为了找出包含正好5个字符的名字，使用“_”模式字符：
mysql> SELECT * FROM pet WHERE name LIKE "_____";


++++LOWER(str)++++++++
SELECT LOWER('QUADRATICALLY');
+------------------------+
| LOWER('QUADRATICALLY') |
+------------------------+
| quadratically           |
+------------------------+


++++LEFT(str,len)++++
mysql> ? left
mysql> SELECT LEFT('foobarbar', 5);
+----------------------+
| LEFT('foobarbar', 5) |
+----------------------+
| fooba                 |
+----------------------+


++++ABS(X) 取绝对值函数++++
mysql> ? abs
mysql> SELECT ABS(-32);
+----------+
| ABS(-32) |
+----------+
|        32 |
+----------+


++++查找表中多余的重复记录+++++++
select * from people where peopleId in (select peopleId from people group by peopleId having count(peopleId) > 1) 

+++++删除表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断，只留有rowid最小的记录++++
delete from people 
where peopleName in (select peopleName from people group by peopleName having count(peopleName) > 1) 
and peopleId not in (select min(peopleId) from people group by peopleName having count(peopleName)>1) 

+++++查找表中多余的重复记录（多个字段）+++++++
select * from vitae a 
where (a.peopleId,a.seq) in (select peopleId,seq from vitae group by peopleId,seq having count(*) > 1) 

+++消除一个字段的左边的第一位++++
update tableName set [Title]=Right([Title],(len([Title])-1)) where Title like '村%'

+++++消除一个字段的右边的第一位++++
update tableName set [Title]=left([Title],(len([Title])-1)) where Title like '%村'


++++++SQL防止注入+++++++
mysql_real_escape_string 转义 SQL 语句中使用的字符串中的特殊字符，并考虑到连接的当前字符集。
$sql = "select count(*) as ctr from users where username='".mysql_real_escape_string($username)."' and password='".mysql_real_escape_string($pw)."' limit 1";


+++++Mysql用sql语句查询当天每一小时的记录+++++
look_time 的格式为 2013-08-06 11:24:57 其实就是 mysql NOW() 函数
sql="select count(*) as total,hour(look_time) as date
from tabname
where to_days(look_time) = to_days(now())
group by hour(look_time) "
取出前一天数据的 sql 语句
sql="select count(*) as total,hour(look_time) as date
from tabname
where  to_days(now()) - to_days(look_time)  < = -1
group by hour(look_time) "


+++++MySQL中case when语句的用法+++++
mysql数据库中case when语句，用于计算条件列表并返回多个可能结果表达式之一。代码如下:
select subject,sum(case when score<60 then 1 else 0 end) as NO,sum(case when score>=60 
then 1 else 0 end) YES from score group by subject;
通上以上MySQL语句,查询出科目及格人数和不及格人数:
+---------+------+------+

 subject | NO   | YES  |

+---------+------+------+

 linux   |    0 |    2 |

 mysql   |    0 |    2 |

 php     |    1 |    1 |
+---------+------+------+


++++++MySQL中concat和trim的用法+++++
concat向表中某字段后追加一段字符串：
update table_name set field=CONCAT(field,'',str);
向表中某字段前加字符串：
update table_name set field=CONCAT('str',field);
干掉两侧指定字符串并更新：
1）给每个字段的尾部加上字母w,用|链接
2）在连接后干掉左右多余的|连接符,避免字段是空时多与的连接符
update test2 set name=trim(BOTH '|' FROM CONCAT(name,'|','w'));